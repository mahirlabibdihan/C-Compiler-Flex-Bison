Line 1: type_specifier : INT

int

Line 3: factor : CONST_INT

1

Line 3: unary_expression : factor

1

Line 3: term : unary_expression

1

Line 3: simple_expression : term

1

Line 3: factor : CONST_INT

2

Line 3: unary_expression : factor

2

Line 3: term : unary_expression

2

Line 3: simple_expression : term

2

Line 3: rel_expression : simple_expression RELOP simple_expression

1==2

Line 3: logic_expression : rel_expression

1==2

Line 3: expression : logic_expression

1==2

Line 5: compound_statement : LCURL RCURL

{}

ScopeTable # 1.1.1

ScopeTable # 1.1

ScopeTable # 1
 5 --> < main : ID> 

Line 5: statement : compound_statement

{}

Line 7: statement : IF LPAREN expression RPAREN statement

if(1==2){}

Line 7: statements : statement

if(1==2){}

Line 7: factor : CONST_INT

4

Line 7: unary_expression : factor

4

Line 7: term : unary_expression

4

Line 7: simple_expression : term

4

Line 7: factor : CONST_INT

3

Line 7: unary_expression : factor

3

Line 7: term : unary_expression

3

Line 7: simple_expression : term

3

Line 7: rel_expression : simple_expression RELOP simple_expression

4==3

Line 7: logic_expression : rel_expression

4==3

Line 7: expression : logic_expression

4==3

Line 9: compound_statement : LCURL RCURL

{}

ScopeTable # 1.1.2

ScopeTable # 1.1

ScopeTable # 1
 5 --> < main : ID> 

Line 9: statement : compound_statement

{}

Line 12: compound_statement : LCURL RCURL

{}

ScopeTable # 1.1.3

ScopeTable # 1.1

ScopeTable # 1
 5 --> < main : ID> 

Line 12: statement : compound_statement

{}

Line 12: statement : IF LPAREN expression RPAREN statement ELSE statement

if(4==3){}
else {}

Line 12: statements : statements statement

if(1==2){}
if(4==3){}
else {}

Line 13: factor : CONST_INT

0

Line 13: unary_expression : factor

0

Line 13: term : unary_expression

0

Line 13: simple_expression : term

0

Line 13: rel_expression : simple_expression

0

Line 13: logic_expression : rel_expression

0

Line 13: expression : logic_expression

0

Line 13: statement : RETURN expression SEMICOLON

return 0;

Line 13: statements : statements statement

if(1==2){}
if(4==3){}
else {}
return 0;

Line 14: compound_statement : LCURL statements RCURL

{
if(1==2){}
if(4==3){}
else {}
return 0;
}

ScopeTable # 1.1

ScopeTable # 1
 5 --> < main : ID> 

Line 14: func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main(){
if(1==2){}
if(4==3){}
else {}
return 0;
}

Line 14: unit : func_definition

int main(){
if(1==2){}
if(4==3){}
else {}
return 0;
}

Line 14: program : unit

int main(){
if(1==2){}
if(4==3){}
else {}
return 0;
}

Line 15: start : program

ScopeTable # 1
 5 --> < main : ID> 

Total lines: 15
Total errors: 0