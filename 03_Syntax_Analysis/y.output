Terminals unused in grammar

    SWITCH
    CASE
    DEFAULT
    DO
    DOUBLE
    CHAR
    STRING
    BREAK
    CONTINUE
    CONST_CHAR


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN parameter_list RPAREN error
    9                 | type_specifier ID LPAREN parameter_list error RPAREN SEMICOLON
   10                 | type_specifier ID LPAREN parameter_list error RPAREN error
   11                 | type_specifier ID LPAREN RPAREN SEMICOLON
   12                 | type_specifier ID LPAREN RPAREN error
   13                 | type_specifier ID LPAREN error RPAREN SEMICOLON
   14                 | type_specifier ID LPAREN error RPAREN SEMICOLON error

   15 $@1: ε

   16 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement

   17 $@2: ε

   18 func_definition: type_specifier ID LPAREN parameter_list error RPAREN $@2 compound_statement

   19 $@3: ε

   20 func_definition: type_specifier ID LPAREN RPAREN $@3 compound_statement

   21 $@4: ε

   22 func_definition: type_specifier ID LPAREN error RPAREN $@4 compound_statement

   23 parameter_list: parameter_list COMMA type_specifier ID
   24               | parameter_list error COMMA type_specifier ID
   25               | parameter_list COMMA type_specifier
   26               | parameter_list error COMMA type_specifier
   27               | type_specifier ID
   28               | type_specifier

   29 compound_statement: LCURL_2 statements RCURL
   30                   | LCURL_2 statements error RCURL
   31                   | LCURL_2 error statements RCURL
   32                   | LCURL_2 RCURL
   33                   | LCURL_2 error RCURL

   34 LCURL_2: LCURL

   35 var_declaration: type_specifier declaration_list SEMICOLON
   36                | type_specifier declaration_list error SEMICOLON

   37 type_specifier: INT
   38               | FLOAT
   39               | VOID

   40 declaration_list: declaration_list COMMA ID
   41                 | declaration_list error COMMA ID
   42                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   43                 | declaration_list error COMMA ID LTHIRD CONST_INT RTHIRD
   44                 | ID
   45                 | ID LTHIRD CONST_INT RTHIRD

   46 statements: statement
   47           | statements statement
   48           | statements error statement

   49 statement: var_declaration
   50          | expression_statement
   51          | compound_statement
   52          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   53          | IF LPAREN expression RPAREN statement
   54          | IF LPAREN expression RPAREN statement ELSE statement
   55          | WHILE LPAREN expression RPAREN statement
   56          | PRINTLN LPAREN ID RPAREN SEMICOLON
   57          | RETURN expression SEMICOLON

   58 expression_statement: SEMICOLON
   59                     | expression SEMICOLON

   60 variable: ID
   61         | ID LTHIRD expression RTHIRD

   62 expression: logic_expression
   63           | variable ASSIGNOP logic_expression

   64 logic_expression: rel_expression
   65                 | rel_expression LOGICOP rel_expression

   66 rel_expression: simple_expression
   67               | simple_expression RELOP simple_expression

   68 simple_expression: term
   69                  | simple_expression ADDOP term

   70 term: unary_expression
   71     | term MULOP unary_expression

   72 unary_expression: ADDOP unary_expression
   73                 | NOT unary_expression
   74                 | factor

   75 factor: variable
   76       | ID LPAREN argument_list RPAREN
   77       | LPAREN expression RPAREN
   78       | CONST_INT
   79       | CONST_FLOAT
   80       | variable INCOP
   81       | variable DECOP

   82 argument_list: arguments
   83              | ε

   84 arguments: arguments COMMA logic_expression
   85          | logic_expression


Terminals, with rules where they appear

    $end (0) 0
    error (256) 8 9 10 12 13 14 18 22 24 26 30 31 33 36 41 43 48
    IF (258) 53 54
    ELSE (259) 54
    LOWER_THAN_ELSE (260)
    SWITCH (261)
    CASE (262)
    DEFAULT (263)
    FOR (264) 52
    DO (265)
    WHILE (266) 55
    INT <symbol> (267) 37
    FLOAT <symbol> (268) 38
    DOUBLE (269)
    CHAR (270)
    STRING (271)
    VOID <symbol> (272) 39
    BREAK (273)
    RETURN (274) 57
    CONTINUE (275)
    INCOP (276) 80
    DECOP (277) 81
    ASSIGNOP (278) 63
    NOT (279) 73
    PRINTLN (280) 56
    LPAREN (281) 7 8 9 10 11 12 13 14 16 18 20 22 52 53 54 55 56 76 77
    RPAREN (282) 7 8 9 10 11 12 13 14 16 18 20 22 52 53 54 55 56 76 77
    LCURL (283) 34
    RCURL (284) 29 30 31 32 33
    LTHIRD (285) 42 43 45 61
    RTHIRD (286) 42 43 45 61
    COMMA (287) 23 24 25 26 40 41 42 43 84
    SEMICOLON (288) 7 9 11 13 14 35 36 56 57 58 59
    ID <symbol> (289) 7 8 9 10 11 12 13 14 16 18 20 22 23 24 27 40 41 42 43 44 45 56 60 61 76
    CONST_INT <symbol> (290) 42 43 45 78
    CONST_FLOAT <symbol> (291) 79
    CONST_CHAR <symbol> (292)
    ADDOP <symbol> (293) 69 72
    MULOP <symbol> (294) 71
    LOGICOP <symbol> (295) 65
    RELOP <symbol> (296) 67


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    start <node> (43)
        on left: 1
        on right: 0
    program <node> (44)
        on left: 2 3
        on right: 1 2
    unit <node> (45)
        on left: 4 5 6
        on right: 2 3
    func_declaration <node> (46)
        on left: 7 8 9 10 11 12 13 14
        on right: 5
    func_definition <node> (47)
        on left: 16 18 20 22
        on right: 6
    $@1 (48)
        on left: 15
        on right: 16
    $@2 (49)
        on left: 17
        on right: 18
    $@3 (50)
        on left: 19
        on right: 20
    $@4 (51)
        on left: 21
        on right: 22
    parameter_list <node> (52)
        on left: 23 24 25 26 27 28
        on right: 7 8 9 10 16 18 23 24 25 26
    compound_statement <node> (53)
        on left: 29 30 31 32 33
        on right: 16 18 20 22 51
    LCURL_2 <node> (54)
        on left: 34
        on right: 29 30 31 32 33
    var_declaration <node> (55)
        on left: 35 36
        on right: 4 49
    type_specifier <node> (56)
        on left: 37 38 39
        on right: 7 8 9 10 11 12 13 14 16 18 20 22 23 24 25 26 27 28 35 36
    declaration_list <node> (57)
        on left: 40 41 42 43 44 45
        on right: 35 36 40 41 42 43
    statements <node> (58)
        on left: 46 47 48
        on right: 29 30 31 47 48
    statement <node> (59)
        on left: 49 50 51 52 53 54 55 56 57
        on right: 46 47 48 52 53 54 55
    expression_statement <node> (60)
        on left: 58 59
        on right: 50 52
    variable <node> (61)
        on left: 60 61
        on right: 63 75 80 81
    expression <node> (62)
        on left: 62 63
        on right: 52 53 54 55 57 59 61 77
    logic_expression <node> (63)
        on left: 64 65
        on right: 62 63 84 85
    rel_expression <node> (64)
        on left: 66 67
        on right: 64 65
    simple_expression <node> (65)
        on left: 68 69
        on right: 66 67 69
    term <node> (66)
        on left: 70 71
        on right: 68 69 71
    unary_expression <node> (67)
        on left: 72 73 74
        on right: 70 71 72 73
    factor <node> (68)
        on left: 75 76 77 78 79 80 81
        on right: 74
    argument_list <node> (69)
        on left: 82 83
        on right: 76
    arguments <node> (70)
        on left: 84 85
        on right: 82 84


State 0

    0 $accept: • start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 1

   37 type_specifier: INT •

    $default  reduce using rule 37 (type_specifier)


State 2

   38 type_specifier: FLOAT •

    $default  reduce using rule 38 (type_specifier)


State 3

   39 type_specifier: VOID •

    $default  reduce using rule 39 (type_specifier)


State 4

    0 $accept: start • $end

    $end  shift, and go to state 11


State 5

    1 start: program •
    2 program: program • unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 12
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 6

    3 program: unit •

    $default  reduce using rule 3 (program)


State 7

    5 unit: func_declaration •

    $default  reduce using rule 5 (unit)


State 8

    6 unit: func_definition •

    $default  reduce using rule 6 (unit)


State 9

    4 unit: var_declaration •

    $default  reduce using rule 4 (unit)


State 10

    7 func_declaration: type_specifier • ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier • ID LPAREN parameter_list RPAREN error
    9                 | type_specifier • ID LPAREN parameter_list error RPAREN SEMICOLON
   10                 | type_specifier • ID LPAREN parameter_list error RPAREN error
   11                 | type_specifier • ID LPAREN RPAREN SEMICOLON
   12                 | type_specifier • ID LPAREN RPAREN error
   13                 | type_specifier • ID LPAREN error RPAREN SEMICOLON
   14                 | type_specifier • ID LPAREN error RPAREN SEMICOLON error
   16 func_definition: type_specifier • ID LPAREN parameter_list RPAREN $@1 compound_statement
   18                | type_specifier • ID LPAREN parameter_list error RPAREN $@2 compound_statement
   20                | type_specifier • ID LPAREN RPAREN $@3 compound_statement
   22                | type_specifier • ID LPAREN error RPAREN $@4 compound_statement
   35 var_declaration: type_specifier • declaration_list SEMICOLON
   36                | type_specifier • declaration_list error SEMICOLON

    ID  shift, and go to state 13

    declaration_list  go to state 14


State 11

    0 $accept: start $end •

    $default  accept


State 12

    2 program: program unit •

    $default  reduce using rule 2 (program)


State 13

    7 func_declaration: type_specifier ID • LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID • LPAREN parameter_list RPAREN error
    9                 | type_specifier ID • LPAREN parameter_list error RPAREN SEMICOLON
   10                 | type_specifier ID • LPAREN parameter_list error RPAREN error
   11                 | type_specifier ID • LPAREN RPAREN SEMICOLON
   12                 | type_specifier ID • LPAREN RPAREN error
   13                 | type_specifier ID • LPAREN error RPAREN SEMICOLON
   14                 | type_specifier ID • LPAREN error RPAREN SEMICOLON error
   16 func_definition: type_specifier ID • LPAREN parameter_list RPAREN $@1 compound_statement
   18                | type_specifier ID • LPAREN parameter_list error RPAREN $@2 compound_statement
   20                | type_specifier ID • LPAREN RPAREN $@3 compound_statement
   22                | type_specifier ID • LPAREN error RPAREN $@4 compound_statement
   44 declaration_list: ID •
   45                 | ID • LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 15
    LTHIRD  shift, and go to state 16

    $default  reduce using rule 44 (declaration_list)


State 14

   35 var_declaration: type_specifier declaration_list • SEMICOLON
   36                | type_specifier declaration_list • error SEMICOLON
   40 declaration_list: declaration_list • COMMA ID
   41                 | declaration_list • error COMMA ID
   42                 | declaration_list • COMMA ID LTHIRD CONST_INT RTHIRD
   43                 | declaration_list • error COMMA ID LTHIRD CONST_INT RTHIRD

    error      shift, and go to state 17
    COMMA      shift, and go to state 18
    SEMICOLON  shift, and go to state 19


State 15

    7 func_declaration: type_specifier ID LPAREN • parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN • parameter_list RPAREN error
    9                 | type_specifier ID LPAREN • parameter_list error RPAREN SEMICOLON
   10                 | type_specifier ID LPAREN • parameter_list error RPAREN error
   11                 | type_specifier ID LPAREN • RPAREN SEMICOLON
   12                 | type_specifier ID LPAREN • RPAREN error
   13                 | type_specifier ID LPAREN • error RPAREN SEMICOLON
   14                 | type_specifier ID LPAREN • error RPAREN SEMICOLON error
   16 func_definition: type_specifier ID LPAREN • parameter_list RPAREN $@1 compound_statement
   18                | type_specifier ID LPAREN • parameter_list error RPAREN $@2 compound_statement
   20                | type_specifier ID LPAREN • RPAREN $@3 compound_statement
   22                | type_specifier ID LPAREN • error RPAREN $@4 compound_statement

    error   shift, and go to state 20
    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3
    RPAREN  shift, and go to state 21

    parameter_list  go to state 22
    type_specifier  go to state 23


State 16

   45 declaration_list: ID LTHIRD • CONST_INT RTHIRD

    CONST_INT  shift, and go to state 24


State 17

   36 var_declaration: type_specifier declaration_list error • SEMICOLON
   41 declaration_list: declaration_list error • COMMA ID
   43                 | declaration_list error • COMMA ID LTHIRD CONST_INT RTHIRD

    COMMA      shift, and go to state 25
    SEMICOLON  shift, and go to state 26


State 18

   40 declaration_list: declaration_list COMMA • ID
   42                 | declaration_list COMMA • ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 27


State 19

   35 var_declaration: type_specifier declaration_list SEMICOLON •

    $default  reduce using rule 35 (var_declaration)


State 20

   13 func_declaration: type_specifier ID LPAREN error • RPAREN SEMICOLON
   14                 | type_specifier ID LPAREN error • RPAREN SEMICOLON error
   22 func_definition: type_specifier ID LPAREN error • RPAREN $@4 compound_statement

    RPAREN  shift, and go to state 28


State 21

   11 func_declaration: type_specifier ID LPAREN RPAREN • SEMICOLON
   12                 | type_specifier ID LPAREN RPAREN • error
   20 func_definition: type_specifier ID LPAREN RPAREN • $@3 compound_statement

    error      shift, and go to state 29
    SEMICOLON  shift, and go to state 30

    LCURL  reduce using rule 19 ($@3)

    $@3  go to state 31


State 22

    7 func_declaration: type_specifier ID LPAREN parameter_list • RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN parameter_list • RPAREN error
    9                 | type_specifier ID LPAREN parameter_list • error RPAREN SEMICOLON
   10                 | type_specifier ID LPAREN parameter_list • error RPAREN error
   16 func_definition: type_specifier ID LPAREN parameter_list • RPAREN $@1 compound_statement
   18                | type_specifier ID LPAREN parameter_list • error RPAREN $@2 compound_statement
   23 parameter_list: parameter_list • COMMA type_specifier ID
   24               | parameter_list • error COMMA type_specifier ID
   25               | parameter_list • COMMA type_specifier
   26               | parameter_list • error COMMA type_specifier

    error   shift, and go to state 32
    RPAREN  shift, and go to state 33
    COMMA   shift, and go to state 34


State 23

   27 parameter_list: type_specifier • ID
   28               | type_specifier •

    ID  shift, and go to state 35

    $default  reduce using rule 28 (parameter_list)


State 24

   45 declaration_list: ID LTHIRD CONST_INT • RTHIRD

    RTHIRD  shift, and go to state 36


State 25

   41 declaration_list: declaration_list error COMMA • ID
   43                 | declaration_list error COMMA • ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 37


State 26

   36 var_declaration: type_specifier declaration_list error SEMICOLON •

    $default  reduce using rule 36 (var_declaration)


State 27

   40 declaration_list: declaration_list COMMA ID •
   42                 | declaration_list COMMA ID • LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 38

    $default  reduce using rule 40 (declaration_list)


State 28

   13 func_declaration: type_specifier ID LPAREN error RPAREN • SEMICOLON
   14                 | type_specifier ID LPAREN error RPAREN • SEMICOLON error
   22 func_definition: type_specifier ID LPAREN error RPAREN • $@4 compound_statement

    SEMICOLON  shift, and go to state 39

    $default  reduce using rule 21 ($@4)

    $@4  go to state 40


State 29

   12 func_declaration: type_specifier ID LPAREN RPAREN error •

    $default  reduce using rule 12 (func_declaration)


State 30

   11 func_declaration: type_specifier ID LPAREN RPAREN SEMICOLON •

    $default  reduce using rule 11 (func_declaration)


State 31

   20 func_definition: type_specifier ID LPAREN RPAREN $@3 • compound_statement

    LCURL  shift, and go to state 41

    compound_statement  go to state 42
    LCURL_2             go to state 43


State 32

    9 func_declaration: type_specifier ID LPAREN parameter_list error • RPAREN SEMICOLON
   10                 | type_specifier ID LPAREN parameter_list error • RPAREN error
   18 func_definition: type_specifier ID LPAREN parameter_list error • RPAREN $@2 compound_statement
   24 parameter_list: parameter_list error • COMMA type_specifier ID
   26               | parameter_list error • COMMA type_specifier

    RPAREN  shift, and go to state 44
    COMMA   shift, and go to state 45


State 33

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN • SEMICOLON
    8                 | type_specifier ID LPAREN parameter_list RPAREN • error
   16 func_definition: type_specifier ID LPAREN parameter_list RPAREN • $@1 compound_statement

    error      shift, and go to state 46
    SEMICOLON  shift, and go to state 47

    LCURL  reduce using rule 15 ($@1)

    $@1  go to state 48


State 34

   23 parameter_list: parameter_list COMMA • type_specifier ID
   25               | parameter_list COMMA • type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 49


State 35

   27 parameter_list: type_specifier ID •

    $default  reduce using rule 27 (parameter_list)


State 36

   45 declaration_list: ID LTHIRD CONST_INT RTHIRD •

    $default  reduce using rule 45 (declaration_list)


State 37

   41 declaration_list: declaration_list error COMMA ID •
   43                 | declaration_list error COMMA ID • LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 50

    $default  reduce using rule 41 (declaration_list)


State 38

   42 declaration_list: declaration_list COMMA ID LTHIRD • CONST_INT RTHIRD

    CONST_INT  shift, and go to state 51


State 39

   13 func_declaration: type_specifier ID LPAREN error RPAREN SEMICOLON •
   14                 | type_specifier ID LPAREN error RPAREN SEMICOLON • error

    error  shift, and go to state 52

    $end   reduce using rule 13 (func_declaration)
    INT    reduce using rule 13 (func_declaration)
    FLOAT  reduce using rule 13 (func_declaration)
    VOID   reduce using rule 13 (func_declaration)


State 40

   22 func_definition: type_specifier ID LPAREN error RPAREN $@4 • compound_statement

    LCURL  shift, and go to state 41

    compound_statement  go to state 53
    LCURL_2             go to state 43


State 41

   34 LCURL_2: LCURL •

    $default  reduce using rule 34 (LCURL_2)


State 42

   20 func_definition: type_specifier ID LPAREN RPAREN $@3 compound_statement •

    $default  reduce using rule 20 (func_definition)


State 43

   29 compound_statement: LCURL_2 • statements RCURL
   30                   | LCURL_2 • statements error RCURL
   31                   | LCURL_2 • error statements RCURL
   32                   | LCURL_2 • RCURL
   33                   | LCURL_2 • error RCURL

    error        shift, and go to state 54
    IF           shift, and go to state 55
    FOR          shift, and go to state 56
    WHILE        shift, and go to state 57
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 58
    NOT          shift, and go to state 59
    PRINTLN      shift, and go to state 60
    LPAREN       shift, and go to state 61
    LCURL        shift, and go to state 41
    RCURL        shift, and go to state 62
    SEMICOLON    shift, and go to state 63
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    compound_statement    go to state 68
    LCURL_2               go to state 43
    var_declaration       go to state 69
    type_specifier        go to state 70
    statements            go to state 71
    statement             go to state 72
    expression_statement  go to state 73
    variable              go to state 74
    expression            go to state 75
    logic_expression      go to state 76
    rel_expression        go to state 77
    simple_expression     go to state 78
    term                  go to state 79
    unary_expression      go to state 80
    factor                go to state 81


State 44

    9 func_declaration: type_specifier ID LPAREN parameter_list error RPAREN • SEMICOLON
   10                 | type_specifier ID LPAREN parameter_list error RPAREN • error
   18 func_definition: type_specifier ID LPAREN parameter_list error RPAREN • $@2 compound_statement

    error      shift, and go to state 82
    SEMICOLON  shift, and go to state 83

    LCURL  reduce using rule 17 ($@2)

    $@2  go to state 84


State 45

   24 parameter_list: parameter_list error COMMA • type_specifier ID
   26               | parameter_list error COMMA • type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 85


State 46

    8 func_declaration: type_specifier ID LPAREN parameter_list RPAREN error •

    $default  reduce using rule 8 (func_declaration)


State 47

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON •

    $default  reduce using rule 7 (func_declaration)


State 48

   16 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 • compound_statement

    LCURL  shift, and go to state 41

    compound_statement  go to state 86
    LCURL_2             go to state 43


State 49

   23 parameter_list: parameter_list COMMA type_specifier • ID
   25               | parameter_list COMMA type_specifier •

    ID  shift, and go to state 87

    $default  reduce using rule 25 (parameter_list)


State 50

   43 declaration_list: declaration_list error COMMA ID LTHIRD • CONST_INT RTHIRD

    CONST_INT  shift, and go to state 88


State 51

   42 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT • RTHIRD

    RTHIRD  shift, and go to state 89


State 52

   14 func_declaration: type_specifier ID LPAREN error RPAREN SEMICOLON error •

    $default  reduce using rule 14 (func_declaration)


State 53

   22 func_definition: type_specifier ID LPAREN error RPAREN $@4 compound_statement •

    $default  reduce using rule 22 (func_definition)


State 54

   31 compound_statement: LCURL_2 error • statements RCURL
   33                   | LCURL_2 error • RCURL

    IF           shift, and go to state 55
    FOR          shift, and go to state 56
    WHILE        shift, and go to state 57
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 58
    NOT          shift, and go to state 59
    PRINTLN      shift, and go to state 60
    LPAREN       shift, and go to state 61
    LCURL        shift, and go to state 41
    RCURL        shift, and go to state 90
    SEMICOLON    shift, and go to state 63
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    compound_statement    go to state 68
    LCURL_2               go to state 43
    var_declaration       go to state 69
    type_specifier        go to state 70
    statements            go to state 91
    statement             go to state 72
    expression_statement  go to state 73
    variable              go to state 74
    expression            go to state 75
    logic_expression      go to state 76
    rel_expression        go to state 77
    simple_expression     go to state 78
    term                  go to state 79
    unary_expression      go to state 80
    factor                go to state 81


State 55

   53 statement: IF • LPAREN expression RPAREN statement
   54          | IF • LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 92


State 56

   52 statement: FOR • LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 93


State 57

   55 statement: WHILE • LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 94


State 58

   57 statement: RETURN • expression SEMICOLON

    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 61
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    variable           go to state 74
    expression         go to state 95
    logic_expression   go to state 76
    rel_expression     go to state 77
    simple_expression  go to state 78
    term               go to state 79
    unary_expression   go to state 80
    factor             go to state 81


State 59

   73 unary_expression: NOT • unary_expression

    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 61
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    variable          go to state 96
    unary_expression  go to state 97
    factor            go to state 81


State 60

   56 statement: PRINTLN • LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 98


State 61

   77 factor: LPAREN • expression RPAREN

    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 61
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    variable           go to state 74
    expression         go to state 99
    logic_expression   go to state 76
    rel_expression     go to state 77
    simple_expression  go to state 78
    term               go to state 79
    unary_expression   go to state 80
    factor             go to state 81


State 62

   32 compound_statement: LCURL_2 RCURL •

    $default  reduce using rule 32 (compound_statement)


State 63

   58 expression_statement: SEMICOLON •

    $default  reduce using rule 58 (expression_statement)


State 64

   60 variable: ID •
   61         | ID • LTHIRD expression RTHIRD
   76 factor: ID • LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 100
    LTHIRD  shift, and go to state 101

    $default  reduce using rule 60 (variable)


State 65

   78 factor: CONST_INT •

    $default  reduce using rule 78 (factor)


State 66

   79 factor: CONST_FLOAT •

    $default  reduce using rule 79 (factor)


State 67

   72 unary_expression: ADDOP • unary_expression

    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 61
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    variable          go to state 96
    unary_expression  go to state 102
    factor            go to state 81


State 68

   51 statement: compound_statement •

    $default  reduce using rule 51 (statement)


State 69

   49 statement: var_declaration •

    $default  reduce using rule 49 (statement)


State 70

   35 var_declaration: type_specifier • declaration_list SEMICOLON
   36                | type_specifier • declaration_list error SEMICOLON

    ID  shift, and go to state 103

    declaration_list  go to state 14


State 71

   29 compound_statement: LCURL_2 statements • RCURL
   30                   | LCURL_2 statements • error RCURL
   47 statements: statements • statement
   48           | statements • error statement

    error        shift, and go to state 104
    IF           shift, and go to state 55
    FOR          shift, and go to state 56
    WHILE        shift, and go to state 57
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 58
    NOT          shift, and go to state 59
    PRINTLN      shift, and go to state 60
    LPAREN       shift, and go to state 61
    LCURL        shift, and go to state 41
    RCURL        shift, and go to state 105
    SEMICOLON    shift, and go to state 63
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    compound_statement    go to state 68
    LCURL_2               go to state 43
    var_declaration       go to state 69
    type_specifier        go to state 70
    statement             go to state 106
    expression_statement  go to state 73
    variable              go to state 74
    expression            go to state 75
    logic_expression      go to state 76
    rel_expression        go to state 77
    simple_expression     go to state 78
    term                  go to state 79
    unary_expression      go to state 80
    factor                go to state 81


State 72

   46 statements: statement •

    $default  reduce using rule 46 (statements)


State 73

   50 statement: expression_statement •

    $default  reduce using rule 50 (statement)


State 74

   63 expression: variable • ASSIGNOP logic_expression
   75 factor: variable •
   80       | variable • INCOP
   81       | variable • DECOP

    INCOP     shift, and go to state 107
    DECOP     shift, and go to state 108
    ASSIGNOP  shift, and go to state 109

    $default  reduce using rule 75 (factor)


State 75

   59 expression_statement: expression • SEMICOLON

    SEMICOLON  shift, and go to state 110


State 76

   62 expression: logic_expression •

    $default  reduce using rule 62 (expression)


State 77

   64 logic_expression: rel_expression •
   65                 | rel_expression • LOGICOP rel_expression

    LOGICOP  shift, and go to state 111

    $default  reduce using rule 64 (logic_expression)


State 78

   66 rel_expression: simple_expression •
   67               | simple_expression • RELOP simple_expression
   69 simple_expression: simple_expression • ADDOP term

    ADDOP  shift, and go to state 112
    RELOP  shift, and go to state 113

    $default  reduce using rule 66 (rel_expression)


State 79

   68 simple_expression: term •
   71 term: term • MULOP unary_expression

    MULOP  shift, and go to state 114

    $default  reduce using rule 68 (simple_expression)


State 80

   70 term: unary_expression •

    $default  reduce using rule 70 (term)


State 81

   74 unary_expression: factor •

    $default  reduce using rule 74 (unary_expression)


State 82

   10 func_declaration: type_specifier ID LPAREN parameter_list error RPAREN error •

    $default  reduce using rule 10 (func_declaration)


State 83

    9 func_declaration: type_specifier ID LPAREN parameter_list error RPAREN SEMICOLON •

    $default  reduce using rule 9 (func_declaration)


State 84

   18 func_definition: type_specifier ID LPAREN parameter_list error RPAREN $@2 • compound_statement

    LCURL  shift, and go to state 41

    compound_statement  go to state 115
    LCURL_2             go to state 43


State 85

   24 parameter_list: parameter_list error COMMA type_specifier • ID
   26               | parameter_list error COMMA type_specifier •

    ID  shift, and go to state 116

    $default  reduce using rule 26 (parameter_list)


State 86

   16 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement •

    $default  reduce using rule 16 (func_definition)


State 87

   23 parameter_list: parameter_list COMMA type_specifier ID •

    $default  reduce using rule 23 (parameter_list)


State 88

   43 declaration_list: declaration_list error COMMA ID LTHIRD CONST_INT • RTHIRD

    RTHIRD  shift, and go to state 117


State 89

   42 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD •

    $default  reduce using rule 42 (declaration_list)


State 90

   33 compound_statement: LCURL_2 error RCURL •

    $default  reduce using rule 33 (compound_statement)


State 91

   31 compound_statement: LCURL_2 error statements • RCURL
   47 statements: statements • statement
   48           | statements • error statement

    error        shift, and go to state 118
    IF           shift, and go to state 55
    FOR          shift, and go to state 56
    WHILE        shift, and go to state 57
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 58
    NOT          shift, and go to state 59
    PRINTLN      shift, and go to state 60
    LPAREN       shift, and go to state 61
    LCURL        shift, and go to state 41
    RCURL        shift, and go to state 119
    SEMICOLON    shift, and go to state 63
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    compound_statement    go to state 68
    LCURL_2               go to state 43
    var_declaration       go to state 69
    type_specifier        go to state 70
    statement             go to state 106
    expression_statement  go to state 73
    variable              go to state 74
    expression            go to state 75
    logic_expression      go to state 76
    rel_expression        go to state 77
    simple_expression     go to state 78
    term                  go to state 79
    unary_expression      go to state 80
    factor                go to state 81


State 92

   53 statement: IF LPAREN • expression RPAREN statement
   54          | IF LPAREN • expression RPAREN statement ELSE statement

    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 61
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    variable           go to state 74
    expression         go to state 120
    logic_expression   go to state 76
    rel_expression     go to state 77
    simple_expression  go to state 78
    term               go to state 79
    unary_expression   go to state 80
    factor             go to state 81


State 93

   52 statement: FOR LPAREN • expression_statement expression_statement expression RPAREN statement

    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 61
    SEMICOLON    shift, and go to state 63
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    expression_statement  go to state 121
    variable              go to state 74
    expression            go to state 75
    logic_expression      go to state 76
    rel_expression        go to state 77
    simple_expression     go to state 78
    term                  go to state 79
    unary_expression      go to state 80
    factor                go to state 81


State 94

   55 statement: WHILE LPAREN • expression RPAREN statement

    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 61
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    variable           go to state 74
    expression         go to state 122
    logic_expression   go to state 76
    rel_expression     go to state 77
    simple_expression  go to state 78
    term               go to state 79
    unary_expression   go to state 80
    factor             go to state 81


State 95

   57 statement: RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 123


State 96

   75 factor: variable •
   80       | variable • INCOP
   81       | variable • DECOP

    INCOP  shift, and go to state 107
    DECOP  shift, and go to state 108

    $default  reduce using rule 75 (factor)


State 97

   73 unary_expression: NOT unary_expression •

    $default  reduce using rule 73 (unary_expression)


State 98

   56 statement: PRINTLN LPAREN • ID RPAREN SEMICOLON

    ID  shift, and go to state 124


State 99

   77 factor: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 125


State 100

   76 factor: ID LPAREN • argument_list RPAREN

    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 61
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    $default  reduce using rule 83 (argument_list)

    variable           go to state 96
    logic_expression   go to state 126
    rel_expression     go to state 77
    simple_expression  go to state 78
    term               go to state 79
    unary_expression   go to state 80
    factor             go to state 81
    argument_list      go to state 127
    arguments          go to state 128


State 101

   61 variable: ID LTHIRD • expression RTHIRD

    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 61
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    variable           go to state 74
    expression         go to state 129
    logic_expression   go to state 76
    rel_expression     go to state 77
    simple_expression  go to state 78
    term               go to state 79
    unary_expression   go to state 80
    factor             go to state 81


State 102

   72 unary_expression: ADDOP unary_expression •

    $default  reduce using rule 72 (unary_expression)


State 103

   44 declaration_list: ID •
   45                 | ID • LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 16

    $default  reduce using rule 44 (declaration_list)


State 104

   30 compound_statement: LCURL_2 statements error • RCURL
   48 statements: statements error • statement

    IF           shift, and go to state 55
    FOR          shift, and go to state 56
    WHILE        shift, and go to state 57
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 58
    NOT          shift, and go to state 59
    PRINTLN      shift, and go to state 60
    LPAREN       shift, and go to state 61
    LCURL        shift, and go to state 41
    RCURL        shift, and go to state 130
    SEMICOLON    shift, and go to state 63
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    compound_statement    go to state 68
    LCURL_2               go to state 43
    var_declaration       go to state 69
    type_specifier        go to state 70
    statement             go to state 131
    expression_statement  go to state 73
    variable              go to state 74
    expression            go to state 75
    logic_expression      go to state 76
    rel_expression        go to state 77
    simple_expression     go to state 78
    term                  go to state 79
    unary_expression      go to state 80
    factor                go to state 81


State 105

   29 compound_statement: LCURL_2 statements RCURL •

    $default  reduce using rule 29 (compound_statement)


State 106

   47 statements: statements statement •

    $default  reduce using rule 47 (statements)


State 107

   80 factor: variable INCOP •

    $default  reduce using rule 80 (factor)


State 108

   81 factor: variable DECOP •

    $default  reduce using rule 81 (factor)


State 109

   63 expression: variable ASSIGNOP • logic_expression

    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 61
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    variable           go to state 96
    logic_expression   go to state 132
    rel_expression     go to state 77
    simple_expression  go to state 78
    term               go to state 79
    unary_expression   go to state 80
    factor             go to state 81


State 110

   59 expression_statement: expression SEMICOLON •

    $default  reduce using rule 59 (expression_statement)


State 111

   65 logic_expression: rel_expression LOGICOP • rel_expression

    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 61
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    variable           go to state 96
    rel_expression     go to state 133
    simple_expression  go to state 78
    term               go to state 79
    unary_expression   go to state 80
    factor             go to state 81


State 112

   69 simple_expression: simple_expression ADDOP • term

    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 61
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    variable          go to state 96
    term              go to state 134
    unary_expression  go to state 80
    factor            go to state 81


State 113

   67 rel_expression: simple_expression RELOP • simple_expression

    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 61
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    variable           go to state 96
    simple_expression  go to state 135
    term               go to state 79
    unary_expression   go to state 80
    factor             go to state 81


State 114

   71 term: term MULOP • unary_expression

    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 61
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    variable          go to state 96
    unary_expression  go to state 136
    factor            go to state 81


State 115

   18 func_definition: type_specifier ID LPAREN parameter_list error RPAREN $@2 compound_statement •

    $default  reduce using rule 18 (func_definition)


State 116

   24 parameter_list: parameter_list error COMMA type_specifier ID •

    $default  reduce using rule 24 (parameter_list)


State 117

   43 declaration_list: declaration_list error COMMA ID LTHIRD CONST_INT RTHIRD •

    $default  reduce using rule 43 (declaration_list)


State 118

   48 statements: statements error • statement

    IF           shift, and go to state 55
    FOR          shift, and go to state 56
    WHILE        shift, and go to state 57
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 58
    NOT          shift, and go to state 59
    PRINTLN      shift, and go to state 60
    LPAREN       shift, and go to state 61
    LCURL        shift, and go to state 41
    SEMICOLON    shift, and go to state 63
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    compound_statement    go to state 68
    LCURL_2               go to state 43
    var_declaration       go to state 69
    type_specifier        go to state 70
    statement             go to state 131
    expression_statement  go to state 73
    variable              go to state 74
    expression            go to state 75
    logic_expression      go to state 76
    rel_expression        go to state 77
    simple_expression     go to state 78
    term                  go to state 79
    unary_expression      go to state 80
    factor                go to state 81


State 119

   31 compound_statement: LCURL_2 error statements RCURL •

    $default  reduce using rule 31 (compound_statement)


State 120

   53 statement: IF LPAREN expression • RPAREN statement
   54          | IF LPAREN expression • RPAREN statement ELSE statement

    RPAREN  shift, and go to state 137


State 121

   52 statement: FOR LPAREN expression_statement • expression_statement expression RPAREN statement

    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 61
    SEMICOLON    shift, and go to state 63
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    expression_statement  go to state 138
    variable              go to state 74
    expression            go to state 75
    logic_expression      go to state 76
    rel_expression        go to state 77
    simple_expression     go to state 78
    term                  go to state 79
    unary_expression      go to state 80
    factor                go to state 81


State 122

   55 statement: WHILE LPAREN expression • RPAREN statement

    RPAREN  shift, and go to state 139


State 123

   57 statement: RETURN expression SEMICOLON •

    $default  reduce using rule 57 (statement)


State 124

   56 statement: PRINTLN LPAREN ID • RPAREN SEMICOLON

    RPAREN  shift, and go to state 140


State 125

   77 factor: LPAREN expression RPAREN •

    $default  reduce using rule 77 (factor)


State 126

   85 arguments: logic_expression •

    $default  reduce using rule 85 (arguments)


State 127

   76 factor: ID LPAREN argument_list • RPAREN

    RPAREN  shift, and go to state 141


State 128

   82 argument_list: arguments •
   84 arguments: arguments • COMMA logic_expression

    COMMA  shift, and go to state 142

    $default  reduce using rule 82 (argument_list)


State 129

   61 variable: ID LTHIRD expression • RTHIRD

    RTHIRD  shift, and go to state 143


State 130

   30 compound_statement: LCURL_2 statements error RCURL •

    $default  reduce using rule 30 (compound_statement)


State 131

   48 statements: statements error statement •

    $default  reduce using rule 48 (statements)


State 132

   63 expression: variable ASSIGNOP logic_expression •

    $default  reduce using rule 63 (expression)


State 133

   65 logic_expression: rel_expression LOGICOP rel_expression •

    $default  reduce using rule 65 (logic_expression)


State 134

   69 simple_expression: simple_expression ADDOP term •
   71 term: term • MULOP unary_expression

    MULOP  shift, and go to state 114

    $default  reduce using rule 69 (simple_expression)


State 135

   67 rel_expression: simple_expression RELOP simple_expression •
   69 simple_expression: simple_expression • ADDOP term

    ADDOP  shift, and go to state 112

    $default  reduce using rule 67 (rel_expression)


State 136

   71 term: term MULOP unary_expression •

    $default  reduce using rule 71 (term)


State 137

   53 statement: IF LPAREN expression RPAREN • statement
   54          | IF LPAREN expression RPAREN • statement ELSE statement

    IF           shift, and go to state 55
    FOR          shift, and go to state 56
    WHILE        shift, and go to state 57
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 58
    NOT          shift, and go to state 59
    PRINTLN      shift, and go to state 60
    LPAREN       shift, and go to state 61
    LCURL        shift, and go to state 41
    SEMICOLON    shift, and go to state 63
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    compound_statement    go to state 68
    LCURL_2               go to state 43
    var_declaration       go to state 69
    type_specifier        go to state 70
    statement             go to state 144
    expression_statement  go to state 73
    variable              go to state 74
    expression            go to state 75
    logic_expression      go to state 76
    rel_expression        go to state 77
    simple_expression     go to state 78
    term                  go to state 79
    unary_expression      go to state 80
    factor                go to state 81


State 138

   52 statement: FOR LPAREN expression_statement expression_statement • expression RPAREN statement

    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 61
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    variable           go to state 74
    expression         go to state 145
    logic_expression   go to state 76
    rel_expression     go to state 77
    simple_expression  go to state 78
    term               go to state 79
    unary_expression   go to state 80
    factor             go to state 81


State 139

   55 statement: WHILE LPAREN expression RPAREN • statement

    IF           shift, and go to state 55
    FOR          shift, and go to state 56
    WHILE        shift, and go to state 57
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 58
    NOT          shift, and go to state 59
    PRINTLN      shift, and go to state 60
    LPAREN       shift, and go to state 61
    LCURL        shift, and go to state 41
    SEMICOLON    shift, and go to state 63
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    compound_statement    go to state 68
    LCURL_2               go to state 43
    var_declaration       go to state 69
    type_specifier        go to state 70
    statement             go to state 146
    expression_statement  go to state 73
    variable              go to state 74
    expression            go to state 75
    logic_expression      go to state 76
    rel_expression        go to state 77
    simple_expression     go to state 78
    term                  go to state 79
    unary_expression      go to state 80
    factor                go to state 81


State 140

   56 statement: PRINTLN LPAREN ID RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 147


State 141

   76 factor: ID LPAREN argument_list RPAREN •

    $default  reduce using rule 76 (factor)


State 142

   84 arguments: arguments COMMA • logic_expression

    NOT          shift, and go to state 59
    LPAREN       shift, and go to state 61
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    variable           go to state 96
    logic_expression   go to state 148
    rel_expression     go to state 77
    simple_expression  go to state 78
    term               go to state 79
    unary_expression   go to state 80
    factor             go to state 81


State 143

   61 variable: ID LTHIRD expression RTHIRD •

    $default  reduce using rule 61 (variable)


State 144

   53 statement: IF LPAREN expression RPAREN statement •
   54          | IF LPAREN expression RPAREN statement • ELSE statement

    ELSE  shift, and go to state 149

    $default  reduce using rule 53 (statement)


State 145

   52 statement: FOR LPAREN expression_statement expression_statement expression • RPAREN statement

    RPAREN  shift, and go to state 150


State 146

   55 statement: WHILE LPAREN expression RPAREN statement •

    $default  reduce using rule 55 (statement)


State 147

   56 statement: PRINTLN LPAREN ID RPAREN SEMICOLON •

    $default  reduce using rule 56 (statement)


State 148

   84 arguments: arguments COMMA logic_expression •

    $default  reduce using rule 84 (arguments)


State 149

   54 statement: IF LPAREN expression RPAREN statement ELSE • statement

    IF           shift, and go to state 55
    FOR          shift, and go to state 56
    WHILE        shift, and go to state 57
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 58
    NOT          shift, and go to state 59
    PRINTLN      shift, and go to state 60
    LPAREN       shift, and go to state 61
    LCURL        shift, and go to state 41
    SEMICOLON    shift, and go to state 63
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    compound_statement    go to state 68
    LCURL_2               go to state 43
    var_declaration       go to state 69
    type_specifier        go to state 70
    statement             go to state 151
    expression_statement  go to state 73
    variable              go to state 74
    expression            go to state 75
    logic_expression      go to state 76
    rel_expression        go to state 77
    simple_expression     go to state 78
    term                  go to state 79
    unary_expression      go to state 80
    factor                go to state 81


State 150

   52 statement: FOR LPAREN expression_statement expression_statement expression RPAREN • statement

    IF           shift, and go to state 55
    FOR          shift, and go to state 56
    WHILE        shift, and go to state 57
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 58
    NOT          shift, and go to state 59
    PRINTLN      shift, and go to state 60
    LPAREN       shift, and go to state 61
    LCURL        shift, and go to state 41
    SEMICOLON    shift, and go to state 63
    ID           shift, and go to state 64
    CONST_INT    shift, and go to state 65
    CONST_FLOAT  shift, and go to state 66
    ADDOP        shift, and go to state 67

    compound_statement    go to state 68
    LCURL_2               go to state 43
    var_declaration       go to state 69
    type_specifier        go to state 70
    statement             go to state 152
    expression_statement  go to state 73
    variable              go to state 74
    expression            go to state 75
    logic_expression      go to state 76
    rel_expression        go to state 77
    simple_expression     go to state 78
    term                  go to state 79
    unary_expression      go to state 80
    factor                go to state 81


State 151

   54 statement: IF LPAREN expression RPAREN statement ELSE statement •

    $default  reduce using rule 54 (statement)


State 152

   52 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement •

    $default  reduce using rule 52 (statement)
