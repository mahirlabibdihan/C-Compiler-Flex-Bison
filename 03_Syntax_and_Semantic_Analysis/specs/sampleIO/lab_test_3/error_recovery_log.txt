Line# 1: Token <INT> Lexeme int found
type_specifier	: INT 
Line# 1: Token <ID> Lexeme a found
Line# 1: Token <COMMA> Lexeme , found
declaration_list : ID 
Line# 1: Token <ID> Lexeme b found
Line# 1: Token <SEMICOLON> Lexeme ; found
declaration_list : declaration_list COMMA ID  
var_declaration : type_specifier declaration_list SEMICOLON  
unit : var_declaration  
program : unit 
Line# 3: Token <FLOAT> Lexeme float found
type_specifier	: FLOAT 
Line# 3: Token <ID> Lexeme x found
Line# 3: Token <COMMA> Lexeme , found
declaration_list : ID 
Line# 3: Token <ID> Lexeme y found
Line# 3: Token <SEMICOLON> Lexeme ; found
declaration_list : declaration_list COMMA ID  
var_declaration : type_specifier declaration_list SEMICOLON  
unit : var_declaration  
program : program unit 
Line# 5: Token <INT> Lexeme int found
type_specifier	: INT 
Line# 5: Token <ID> Lexeme add_int found
Line# 5: Token <LPAREN> Lexeme ( found
Line# 5: Token <INT> Lexeme int found
type_specifier	: INT 
Line# 5: Token <ADDOP> Lexeme - found
parameter_list  : type_specifier ID
Line# 5: Token <RPAREN> Lexeme ) found
Line# 5: Token <LCURL> Lexeme { found
Line# 6: Token <RETURN> Lexeme return found
Line# 6: Token <CONST_INT> Lexeme 5 found
factor	: CONST_INT   
unary_expression : factor 
term :	unary_expression 
Line# 6: Token <SEMICOLON> Lexeme ; found
simple_expression : term 
rel_expression	: simple_expression 
logic_expression : rel_expression 	 
expression 	: logic_expression	 
statement : RETURN expression SEMICOLON
statements : statement  
Line# 7: Token <RCURL> Lexeme } found
compound_statement : LCURL statements RCURL  
	ScopeTable# 2
	8--> <NN, INT, Width: 2, Offset: 4, IsParam: 1, Scope: 2> 
	ScopeTable# 1
	1--> <y, FLOAT, Width: 4, Offset: 12, IsParam: 0, Scope: 1> 
	10--> <a, INT, Width: 2, Offset: 2, IsParam: 0, Scope: 1> 
	11--> <b, INT, Width: 2, Offset: 4, IsParam: 0, Scope: 1> <x, FLOAT, Width: 4, Offset: 8, IsParam: 0, Scope: 1> 
unit : func_definition  
program : program unit 
Line# 9: Token <INT> Lexeme int found
type_specifier	: INT 
Line# 9: Token <ID> Lexeme main found
Line# 9: Token <LPAREN> Lexeme ( found
Line# 9: Token <RPAREN> Lexeme ) found
Line# 9: Token <LCURL> Lexeme { found
Line# 10: Token <INT> Lexeme int found
type_specifier	: INT 
Line# 10: Token <ID> Lexeme p found
Line# 10: Token <ADDOP> Lexeme - found
declaration_list : ID 
Line# 10: Token <ID> Lexeme q found
Line# 10: Token <COMMA> Lexeme , found
Line# 10: Token <ID> Lexeme r found
Line# 10: Token <SEMICOLON> Lexeme ; found
program : program unit 
statement : var_declaration 
statements : statement  
Line# 12: Token <ID> Lexeme a found
Line# 12: Token <ASSIGNOP> Lexeme = found
variable : ID 	 
Line# 12: Token <CONST_INT> Lexeme 2 found
factor	: CONST_INT   
unary_expression : factor 
term :	unary_expression 
Line# 12: Token <ADDOP> Lexeme + found
simple_expression : term 
Line# 12: Token <ASSIGNOP> Lexeme = found
Line# 12: Token <CONST_INT> Lexeme 4 found
Line# 12: Token <SEMICOLON> Lexeme ; found
statement : expression_statement  
statements : statements statement  
Line# 13: Token <ID> Lexeme x found
Line# 13: Token <ASSIGNOP> Lexeme = found
variable : ID 	 
Line# 13: Token <CONST_FLOAT> Lexeme 2.3 found
factor	: CONST_FLOAT   
unary_expression : factor 
term :	unary_expression 
Line# 13: Token <SEMICOLON> Lexeme ; found
simple_expression : term 
rel_expression	: simple_expression 
logic_expression : rel_expression 	 
expression 	: variable ASSIGNOP logic_expression 		 
expression_statement : expression SEMICOLON 		 
statement : expression_statement  
statements : statements statement  
Line# 15: Token <RETURN> Lexeme return found
Line# 15: Token <CONST_INT> Lexeme 0 found
factor	: CONST_INT   
unary_expression : factor 
term :	unary_expression 
Line# 15: Token <SEMICOLON> Lexeme ; found
simple_expression : term 
rel_expression	: simple_expression 
logic_expression : rel_expression 	 
expression 	: logic_expression	 
statement : RETURN expression SEMICOLON
statements : statements statement  
Line# 16: Token <RCURL> Lexeme } found
compound_statement : LCURL statements RCURL  
	ScopeTable# 3
	3--> <p, INT, Width: 2, Offset: 2, IsParam: 0, Scope: 3> 
	ScopeTable# 1
	1--> <y, FLOAT, Width: 4, Offset: 12, IsParam: 0, Scope: 1> 
	2--> <main, FUNCTION, Width: 0, Offset: -1, IsParam: 0, Scope: 1, RetType: INT> 
	10--> <a, INT, Width: 2, Offset: 2, IsParam: 0, Scope: 1> 
	11--> <b, INT, Width: 2, Offset: 4, IsParam: 0, Scope: 1> <x, FLOAT, Width: 4, Offset: 8, IsParam: 0, Scope: 1> 
func_definition : type_specifier ID LPAREN RPAREN compound_statement
unit : func_definition  
program : program unit 
start : program 
Total Lines: 17
Total Errors: 3
