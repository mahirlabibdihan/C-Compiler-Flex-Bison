<INT, int>
<ID, main>
<LPAREN, (>
<RPAREN, )>
<LCURL, {>
<INT, int>
<ID, i>
<COMMA, ,>
<ID, j>
<COMMA, ,>
<ID, k>
<COMMA, ,>
<ID, ll>
<SEMICOLON, ;>
<FOR, for>
<LPAREN, (>
<ID, i>
<ASSIGNOP, =>
<CONST_INT, 0>
<SEMICOLON, ;>
<ID, i>
<RELOP, <>
<CONST_INT, 6>
<SEMICOLON, ;>
<ID, i>
<INCOP, ++>
<RPAREN, )>
<LCURL, {>
<INT, int>
<ID, k>
<SEMICOLON, ;>
<PRINTLN, println>
<LPAREN, (>
<ID, i>
<RPAREN, )>
<SEMICOLON, ;>
<RCURL, }>
<ID, k>
<ASSIGNOP, =>
<CONST_INT, 4>
<SEMICOLON, ;>
<ID, ll>
<ASSIGNOP, =>
<CONST_INT, 6>
<SEMICOLON, ;>
<WHILE, while>
<LPAREN, (>
<ID, k>
<RELOP, >>
<CONST_INT, 0>
<RPAREN, )>
<LCURL, {>
<ID, ll>
<ASSIGNOP, =>
<ID, ll>
<ADDOP, +>
<CONST_INT, 3>
<SEMICOLON, ;>
<ID, k>
<DECOP, -->
<SEMICOLON, ;>
<RCURL, }>
<PRINTLN, println>
<LPAREN, (>
<ID, ll>
<RPAREN, )>
<SEMICOLON, ;>
<PRINTLN, println>
<LPAREN, (>
<ID, k>
<RPAREN, )>
<SEMICOLON, ;>
<ID, k>
<ASSIGNOP, =>
<CONST_INT, 4>
<SEMICOLON, ;>
<ID, ll>
<ASSIGNOP, =>
<CONST_INT, 6>
<SEMICOLON, ;>
<WHILE, while>
<LPAREN, (>
<ID, k>
<DECOP, -->
<RPAREN, )>
<LCURL, {>
<ID, ll>
<ASSIGNOP, =>
<ID, ll>
<ADDOP, +>
<CONST_INT, 3>
<SEMICOLON, ;>
<RCURL, }>
<PRINTLN, println>
<LPAREN, (>
<ID, ll>
<RPAREN, )>
<SEMICOLON, ;>
<PRINTLN, println>
<LPAREN, (>
<ID, k>
<RPAREN, )>
<SEMICOLON, ;>
<RETURN, return>
<CONST_INT, 0>
<SEMICOLON, ;>
<RCURL, }>
