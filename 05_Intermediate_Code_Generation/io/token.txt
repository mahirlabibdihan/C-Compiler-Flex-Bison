<VOID, void>
<ID, show>
<LPAREN, (>
<INT, int>
<ID, n>
<RPAREN, )>
<LCURL, {>
<PRINTLN, println>
<LPAREN, (>
<ID, n>
<RPAREN, )>
<SEMICOLON, ;>
<RCURL, }>
<INT, int>
<ID, cnt>
<SEMICOLON, ;>
<INT, int>
<ID, check>
<LPAREN, (>
<RPAREN, )>
<LCURL, {>
<ID, cnt>
<INCOP, ++>
<SEMICOLON, ;>
<RETURN, return>
<ID, cnt>
<SEMICOLON, ;>
<RCURL, }>
<INT, int>
<ID, factorial>
<LPAREN, (>
<INT, int>
<ID, n>
<RPAREN, )>
<LCURL, {>
<IF, if>
<LPAREN, (>
<ID, n>
<RELOP, ==>
<CONST_INT, 0>
<RPAREN, )>
<LCURL, {>
<RETURN, return>
<CONST_INT, 1>
<SEMICOLON, ;>
<RCURL, }>
<ELSE, else>
<LCURL, {>
<RETURN, return>
<ID, n>
<MULOP, *>
<ID, factorial>
<LPAREN, (>
<ID, n>
<ADDOP, ->
<CONST_INT, 1>
<RPAREN, )>
<SEMICOLON, ;>
<RCURL, }>
<RCURL, }>
<VOID, void>
<ID, grade>
<LPAREN, (>
<INT, int>
<ID, n>
<RPAREN, )>
<LCURL, {>
<IF, if>
<LPAREN, (>
<ID, n>
<RELOP, <>
<CONST_INT, 0>
<LOGICOP, ||>
<ID, n>
<RELOP, >>
<CONST_INT, 100>
<RPAREN, )>
<LCURL, {>
<ID, show>
<LPAREN, (>
<ADDOP, ->
<CONST_INT, 1>
<RPAREN, )>
<SEMICOLON, ;>
<RCURL, }>
<ELSE, else>
<IF, if>
<LPAREN, (>
<ID, n>
<RELOP, >=>
<CONST_INT, 80>
<RPAREN, )>
<LCURL, {>
<ID, show>
<LPAREN, (>
<CONST_INT, 80>
<RPAREN, )>
<SEMICOLON, ;>
<RCURL, }>
<ELSE, else>
<IF, if>
<LPAREN, (>
<ID, n>
<RELOP, >=>
<CONST_INT, 70>
<LOGICOP, &&>
<ID, n>
<RELOP, <>
<CONST_INT, 80>
<RPAREN, )>
<LCURL, {>
<ID, show>
<LPAREN, (>
<CONST_INT, 70>
<RPAREN, )>
<SEMICOLON, ;>
<RCURL, }>
<ELSE, else>
<IF, if>
<LPAREN, (>
<ID, n>
<RELOP, >=>
<CONST_INT, 60>
<LOGICOP, &&>
<ID, n>
<RELOP, <>
<CONST_INT, 70>
<RPAREN, )>
<LCURL, {>
<ID, show>
<LPAREN, (>
<CONST_INT, 60>
<RPAREN, )>
<SEMICOLON, ;>
<RCURL, }>
<ELSE, else>
<IF, if>
<LPAREN, (>
<ID, n>
<RELOP, >=>
<CONST_INT, 50>
<LOGICOP, &&>
<ID, n>
<RELOP, <>
<CONST_INT, 60>
<RPAREN, )>
<LCURL, {>
<ID, show>
<LPAREN, (>
<CONST_INT, 50>
<RPAREN, )>
<SEMICOLON, ;>
<RCURL, }>
<ELSE, else>
<IF, if>
<LPAREN, (>
<ID, n>
<RELOP, <>
<CONST_INT, 50>
<RPAREN, )>
<LCURL, {>
<ID, show>
<LPAREN, (>
<ADDOP, ->
<CONST_INT, 100>
<RPAREN, )>
<SEMICOLON, ;>
<RCURL, }>
<RCURL, }>
<INT, int>
<ID, main>
<LPAREN, (>
<RPAREN, )>
<LCURL, {>
<ID, grade>
<LPAREN, (>
<CONST_INT, 85>
<RPAREN, )>
<SEMICOLON, ;>
<ID, grade>
<LPAREN, (>
<CONST_INT, 75>
<RPAREN, )>
<SEMICOLON, ;>
<ID, grade>
<LPAREN, (>
<CONST_INT, 80>
<RPAREN, )>
<SEMICOLON, ;>
<ID, grade>
<LPAREN, (>
<CONST_INT, 69>
<RPAREN, )>
<SEMICOLON, ;>
<ID, grade>
<LPAREN, (>
<CONST_INT, 32>
<RPAREN, )>
<SEMICOLON, ;>
<ID, grade>
<LPAREN, (>
<CONST_INT, 49>
<RPAREN, )>
<SEMICOLON, ;>
<ID, grade>
<LPAREN, (>
<CONST_INT, 50>
<RPAREN, )>
<SEMICOLON, ;>
<ID, grade>
<LPAREN, (>
<CONST_INT, 71>
<RPAREN, )>
<SEMICOLON, ;>
<ID, grade>
<LPAREN, (>
<CONST_INT, 51>
<RPAREN, )>
<SEMICOLON, ;>
<ID, grade>
<LPAREN, (>
<ADDOP, ->
<CONST_INT, 95>
<RPAREN, )>
<SEMICOLON, ;>
<ID, grade>
<LPAREN, (>
<CONST_INT, 200>
<RPAREN, )>
<SEMICOLON, ;>
<ID, show>
<LPAREN, (>
<ID, factorial>
<LPAREN, (>
<CONST_INT, 5>
<RPAREN, )>
<RPAREN, )>
<SEMICOLON, ;>
<ID, show>
<LPAREN, (>
<ID, factorial>
<LPAREN, (>
<CONST_INT, 6>
<RPAREN, )>
<RPAREN, )>
<SEMICOLON, ;>
<RETURN, return>
<CONST_INT, 0>
<SEMICOLON, ;>
<RCURL, }>
