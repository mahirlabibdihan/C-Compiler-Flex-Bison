Terminals unused in grammar

   SWITCH
   CASE
   DEFAULT
   DO
   DOUBLE
   CHAR
   STRING
   BREAK
   CONTINUE
   CONST_CHAR


State 41 conflicts: 1 shift/reduce


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN parameter_list RPAREN error
    9                 | type_specifier ID LPAREN parameter_list error RPAREN SEMICOLON
   10                 | type_specifier ID LPAREN parameter_list error RPAREN error
   11                 | type_specifier ID LPAREN RPAREN SEMICOLON
   12                 | type_specifier ID LPAREN RPAREN error
   13                 | type_specifier ID LPAREN error RPAREN SEMICOLON
   14                 | type_specifier ID LPAREN error RPAREN SEMICOLON error

   15 $@1: /* empty */

   16 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement

   17 $@2: /* empty */

   18 func_definition: type_specifier ID LPAREN parameter_list error RPAREN $@2 compound_statement

   19 $@3: /* empty */

   20 func_definition: type_specifier ID LPAREN RPAREN $@3 compound_statement

   21 $@4: /* empty */

   22 func_definition: type_specifier ID LPAREN error RPAREN $@4 compound_statement

   23 parameter_list: parameter_list COMMA type_specifier ID
   24               | parameter_list error COMMA type_specifier ID
   25               | parameter_list COMMA type_specifier
   26               | parameter_list error COMMA type_specifier
   27               | type_specifier ID
   28               | type_specifier

   29 compound_statement: LCURL create_scope statements RCURL
   30                   | LCURL create_scope statements error RCURL
   31                   | LCURL create_scope error statements RCURL
   32                   | LCURL create_scope RCURL
   33                   | LCURL create_scope error RCURL

   34 create_scope: /* empty */

   35 var_declaration: type_specifier declaration_list SEMICOLON
   36                | type_specifier declaration_list error SEMICOLON

   37 type_specifier: INT
   38               | FLOAT
   39               | VOID

   40 declaration_list: declaration_list COMMA ID
   41                 | declaration_list error COMMA ID
   42                 | declaration_list COMMA ID LTHIRD constant RTHIRD
   43                 | declaration_list error COMMA ID LTHIRD constant RTHIRD
   44                 | ID
   45                 | ID LTHIRD constant RTHIRD

   46 statements: statement
   47           | statements statement
   48           | statements error statement

   49 statement: var_declaration
   50          | func_definition
   51          | func_declaration
   52          | expression_statement
   53          | compound_statement

   54 $@5: /* empty */

   55 $@6: /* empty */

   56 $@7: /* empty */

   57 statement: FOR LPAREN expression_statement $@5 expression_statement $@6 expression $@7 RPAREN statement
   58          | IF LPAREN expression RPAREN create_if_block statement

   59 $@8: /* empty */

   60 statement: IF LPAREN expression RPAREN create_if_block statement ELSE $@8 statement

   61 $@9: /* empty */

   62 $@10: /* empty */

   63 statement: WHILE $@9 LPAREN expression $@10 RPAREN statement
   64          | PRINTLN LPAREN ID RPAREN SEMICOLON
   65          | RETURN expression SEMICOLON
   66          | RETURN SEMICOLON

   67 create_if_block: /* empty */

   68 expression_statement: SEMICOLON
   69                     | expression SEMICOLON

   70 variable: ID
   71         | ID LTHIRD expression RTHIRD

   72 expression: logic_expression
   73           | variable ASSIGNOP logic_expression

   74 logic_expression: rel_expression
   75                 | rel_expression LOGICOP rel_expression

   76 rel_expression: simple_expression
   77               | simple_expression RELOP simple_expression

   78 simple_expression: term
   79                  | simple_expression ADDOP term

   80 term: unary_expression
   81     | term MULOP unary_expression

   82 unary_expression: ADDOP unary_expression
   83                 | NOT unary_expression
   84                 | factor

   85 factor: variable
   86       | ID LPAREN argument_list RPAREN
   87       | LPAREN expression RPAREN
   88       | CONST_INT
   89       | CONST_FLOAT
   90       | variable INCOP
   91       | variable DECOP

   92 argument_list: arguments
   93              | /* empty */

   94 arguments: arguments COMMA logic_expression
   95          | logic_expression

   96 constant: CONST_INT
   97         | CONST_FLOAT


Terminals, with rules where they appear

$end (0) 0
error (256) 8 9 10 12 13 14 18 22 24 26 30 31 33 36 41 43 48
IF (258) 58 60
ELSE (259) 60
LOWER_THAN_ELSE (260)
SWITCH (261)
CASE (262)
DEFAULT (263)
FOR (264) 57
DO (265)
WHILE (266) 63
INT (267) 37
FLOAT (268) 38
DOUBLE (269)
CHAR (270)
STRING (271)
VOID (272) 39
BREAK (273)
RETURN (274) 65 66
CONTINUE (275)
INCOP (276) 90
DECOP (277) 91
ASSIGNOP (278) 73
NOT (279) 83
PRINTLN (280) 64
LPAREN (281) 7 8 9 10 11 12 13 14 16 18 20 22 57 58 60 63 64 86 87
RPAREN (282) 7 8 9 10 11 12 13 14 16 18 20 22 57 58 60 63 64 86 87
LCURL (283) 29 30 31 32 33
RCURL (284) 29 30 31 32 33
LTHIRD (285) 42 43 45 71
RTHIRD (286) 42 43 45 71
COMMA (287) 23 24 25 26 40 41 42 43 94
SEMICOLON (288) 7 9 11 13 14 35 36 64 65 66 68 69
ID (289) 7 8 9 10 11 12 13 14 16 18 20 22 23 24 27 40 41 42 43 44 45
    64 70 71 86
CONST_INT (290) 88 96
CONST_FLOAT (291) 89 97
CONST_CHAR (292)
ADDOP (293) 79 82
MULOP (294) 81
LOGICOP (295) 75
RELOP (296) 77


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
start (43)
    on left: 1, on right: 0
program (44)
    on left: 2 3, on right: 1 2
unit (45)
    on left: 4 5 6, on right: 2 3
func_declaration (46)
    on left: 7 8 9 10 11 12 13 14, on right: 5 51
func_definition (47)
    on left: 16 18 20 22, on right: 6 50
$@1 (48)
    on left: 15, on right: 16
$@2 (49)
    on left: 17, on right: 18
$@3 (50)
    on left: 19, on right: 20
$@4 (51)
    on left: 21, on right: 22
parameter_list (52)
    on left: 23 24 25 26 27 28, on right: 7 8 9 10 16 18 23 24 25 26
compound_statement (53)
    on left: 29 30 31 32 33, on right: 16 18 20 22 53
create_scope (54)
    on left: 34, on right: 29 30 31 32 33
var_declaration (55)
    on left: 35 36, on right: 4 49
type_specifier (56)
    on left: 37 38 39, on right: 7 8 9 10 11 12 13 14 16 18 20 22 23
    24 25 26 27 28 35 36
declaration_list (57)
    on left: 40 41 42 43 44 45, on right: 35 36 40 41 42 43
statements (58)
    on left: 46 47 48, on right: 29 30 31 47 48
statement (59)
    on left: 49 50 51 52 53 57 58 60 63 64 65 66, on right: 46 47 48
    57 58 60 63
$@5 (60)
    on left: 54, on right: 57
$@6 (61)
    on left: 55, on right: 57
$@7 (62)
    on left: 56, on right: 57
$@8 (63)
    on left: 59, on right: 60
$@9 (64)
    on left: 61, on right: 63
$@10 (65)
    on left: 62, on right: 63
create_if_block (66)
    on left: 67, on right: 58 60
expression_statement (67)
    on left: 68 69, on right: 52 57
variable (68)
    on left: 70 71, on right: 73 85 90 91
expression (69)
    on left: 72 73, on right: 57 58 60 63 65 69 71 87
logic_expression (70)
    on left: 74 75, on right: 72 73 94 95
rel_expression (71)
    on left: 76 77, on right: 74 75
simple_expression (72)
    on left: 78 79, on right: 76 77 79
term (73)
    on left: 80 81, on right: 78 79 81
unary_expression (74)
    on left: 82 83 84, on right: 80 81 82 83
factor (75)
    on left: 85 86 87 88 89 90 91, on right: 84
argument_list (76)
    on left: 92 93, on right: 86
arguments (77)
    on left: 94 95, on right: 92 94
constant (78)
    on left: 96 97, on right: 42 43 45


state 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


state 1

   37 type_specifier: INT .

    $default  reduce using rule 37 (type_specifier)


state 2

   38 type_specifier: FLOAT .

    $default  reduce using rule 38 (type_specifier)


state 3

   39 type_specifier: VOID .

    $default  reduce using rule 39 (type_specifier)


state 4

    0 $accept: start . $end

    $end  shift, and go to state 11


state 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 12
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


state 6

    3 program: unit .

    $default  reduce using rule 3 (program)


state 7

    5 unit: func_declaration .

    $default  reduce using rule 5 (unit)


state 8

    6 unit: func_definition .

    $default  reduce using rule 6 (unit)


state 9

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


state 10

    7 func_declaration: type_specifier . ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier . ID LPAREN parameter_list RPAREN error
    9                 | type_specifier . ID LPAREN parameter_list error RPAREN SEMICOLON
   10                 | type_specifier . ID LPAREN parameter_list error RPAREN error
   11                 | type_specifier . ID LPAREN RPAREN SEMICOLON
   12                 | type_specifier . ID LPAREN RPAREN error
   13                 | type_specifier . ID LPAREN error RPAREN SEMICOLON
   14                 | type_specifier . ID LPAREN error RPAREN SEMICOLON error
   16 func_definition: type_specifier . ID LPAREN parameter_list RPAREN $@1 compound_statement
   18                | type_specifier . ID LPAREN parameter_list error RPAREN $@2 compound_statement
   20                | type_specifier . ID LPAREN RPAREN $@3 compound_statement
   22                | type_specifier . ID LPAREN error RPAREN $@4 compound_statement
   35 var_declaration: type_specifier . declaration_list SEMICOLON
   36                | type_specifier . declaration_list error SEMICOLON

    ID  shift, and go to state 13

    declaration_list  go to state 14


state 11

    0 $accept: start $end .

    $default  accept


state 12

    2 program: program unit .

    $default  reduce using rule 2 (program)


state 13

    7 func_declaration: type_specifier ID . LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID . LPAREN parameter_list RPAREN error
    9                 | type_specifier ID . LPAREN parameter_list error RPAREN SEMICOLON
   10                 | type_specifier ID . LPAREN parameter_list error RPAREN error
   11                 | type_specifier ID . LPAREN RPAREN SEMICOLON
   12                 | type_specifier ID . LPAREN RPAREN error
   13                 | type_specifier ID . LPAREN error RPAREN SEMICOLON
   14                 | type_specifier ID . LPAREN error RPAREN SEMICOLON error
   16 func_definition: type_specifier ID . LPAREN parameter_list RPAREN $@1 compound_statement
   18                | type_specifier ID . LPAREN parameter_list error RPAREN $@2 compound_statement
   20                | type_specifier ID . LPAREN RPAREN $@3 compound_statement
   22                | type_specifier ID . LPAREN error RPAREN $@4 compound_statement
   44 declaration_list: ID .
   45                 | ID . LTHIRD constant RTHIRD

    LPAREN  shift, and go to state 15
    LTHIRD  shift, and go to state 16

    $default  reduce using rule 44 (declaration_list)


state 14

   35 var_declaration: type_specifier declaration_list . SEMICOLON
   36                | type_specifier declaration_list . error SEMICOLON
   40 declaration_list: declaration_list . COMMA ID
   41                 | declaration_list . error COMMA ID
   42                 | declaration_list . COMMA ID LTHIRD constant RTHIRD
   43                 | declaration_list . error COMMA ID LTHIRD constant RTHIRD

    error      shift, and go to state 17
    COMMA      shift, and go to state 18
    SEMICOLON  shift, and go to state 19


state 15

    7 func_declaration: type_specifier ID LPAREN . parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN . parameter_list RPAREN error
    9                 | type_specifier ID LPAREN . parameter_list error RPAREN SEMICOLON
   10                 | type_specifier ID LPAREN . parameter_list error RPAREN error
   11                 | type_specifier ID LPAREN . RPAREN SEMICOLON
   12                 | type_specifier ID LPAREN . RPAREN error
   13                 | type_specifier ID LPAREN . error RPAREN SEMICOLON
   14                 | type_specifier ID LPAREN . error RPAREN SEMICOLON error
   16 func_definition: type_specifier ID LPAREN . parameter_list RPAREN $@1 compound_statement
   18                | type_specifier ID LPAREN . parameter_list error RPAREN $@2 compound_statement
   20                | type_specifier ID LPAREN . RPAREN $@3 compound_statement
   22                | type_specifier ID LPAREN . error RPAREN $@4 compound_statement

    error   shift, and go to state 20
    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3
    RPAREN  shift, and go to state 21

    parameter_list  go to state 22
    type_specifier  go to state 23


state 16

   45 declaration_list: ID LTHIRD . constant RTHIRD

    CONST_INT    shift, and go to state 24
    CONST_FLOAT  shift, and go to state 25

    constant  go to state 26


state 17

   36 var_declaration: type_specifier declaration_list error . SEMICOLON
   41 declaration_list: declaration_list error . COMMA ID
   43                 | declaration_list error . COMMA ID LTHIRD constant RTHIRD

    COMMA      shift, and go to state 27
    SEMICOLON  shift, and go to state 28


state 18

   40 declaration_list: declaration_list COMMA . ID
   42                 | declaration_list COMMA . ID LTHIRD constant RTHIRD

    ID  shift, and go to state 29


state 19

   35 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 35 (var_declaration)


state 20

   13 func_declaration: type_specifier ID LPAREN error . RPAREN SEMICOLON
   14                 | type_specifier ID LPAREN error . RPAREN SEMICOLON error
   22 func_definition: type_specifier ID LPAREN error . RPAREN $@4 compound_statement

    RPAREN  shift, and go to state 30


state 21

   11 func_declaration: type_specifier ID LPAREN RPAREN . SEMICOLON
   12                 | type_specifier ID LPAREN RPAREN . error
   20 func_definition: type_specifier ID LPAREN RPAREN . $@3 compound_statement

    error      shift, and go to state 31
    SEMICOLON  shift, and go to state 32

    LCURL  reduce using rule 19 ($@3)

    $@3  go to state 33


state 22

    7 func_declaration: type_specifier ID LPAREN parameter_list . RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN parameter_list . RPAREN error
    9                 | type_specifier ID LPAREN parameter_list . error RPAREN SEMICOLON
   10                 | type_specifier ID LPAREN parameter_list . error RPAREN error
   16 func_definition: type_specifier ID LPAREN parameter_list . RPAREN $@1 compound_statement
   18                | type_specifier ID LPAREN parameter_list . error RPAREN $@2 compound_statement
   23 parameter_list: parameter_list . COMMA type_specifier ID
   24               | parameter_list . error COMMA type_specifier ID
   25               | parameter_list . COMMA type_specifier
   26               | parameter_list . error COMMA type_specifier

    error   shift, and go to state 34
    RPAREN  shift, and go to state 35
    COMMA   shift, and go to state 36


state 23

   27 parameter_list: type_specifier . ID
   28               | type_specifier .

    ID  shift, and go to state 37

    $default  reduce using rule 28 (parameter_list)


state 24

   96 constant: CONST_INT .

    $default  reduce using rule 96 (constant)


state 25

   97 constant: CONST_FLOAT .

    $default  reduce using rule 97 (constant)


state 26

   45 declaration_list: ID LTHIRD constant . RTHIRD

    RTHIRD  shift, and go to state 38


state 27

   41 declaration_list: declaration_list error COMMA . ID
   43                 | declaration_list error COMMA . ID LTHIRD constant RTHIRD

    ID  shift, and go to state 39


state 28

   36 var_declaration: type_specifier declaration_list error SEMICOLON .

    $default  reduce using rule 36 (var_declaration)


state 29

   40 declaration_list: declaration_list COMMA ID .
   42                 | declaration_list COMMA ID . LTHIRD constant RTHIRD

    LTHIRD  shift, and go to state 40

    $default  reduce using rule 40 (declaration_list)


state 30

   13 func_declaration: type_specifier ID LPAREN error RPAREN . SEMICOLON
   14                 | type_specifier ID LPAREN error RPAREN . SEMICOLON error
   22 func_definition: type_specifier ID LPAREN error RPAREN . $@4 compound_statement

    SEMICOLON  shift, and go to state 41

    $default  reduce using rule 21 ($@4)

    $@4  go to state 42


state 31

   12 func_declaration: type_specifier ID LPAREN RPAREN error .

    $default  reduce using rule 12 (func_declaration)


state 32

   11 func_declaration: type_specifier ID LPAREN RPAREN SEMICOLON .

    $default  reduce using rule 11 (func_declaration)


state 33

   20 func_definition: type_specifier ID LPAREN RPAREN $@3 . compound_statement

    LCURL  shift, and go to state 43

    compound_statement  go to state 44


state 34

    9 func_declaration: type_specifier ID LPAREN parameter_list error . RPAREN SEMICOLON
   10                 | type_specifier ID LPAREN parameter_list error . RPAREN error
   18 func_definition: type_specifier ID LPAREN parameter_list error . RPAREN $@2 compound_statement
   24 parameter_list: parameter_list error . COMMA type_specifier ID
   26               | parameter_list error . COMMA type_specifier

    RPAREN  shift, and go to state 45
    COMMA   shift, and go to state 46


state 35

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN . SEMICOLON
    8                 | type_specifier ID LPAREN parameter_list RPAREN . error
   16 func_definition: type_specifier ID LPAREN parameter_list RPAREN . $@1 compound_statement

    error      shift, and go to state 47
    SEMICOLON  shift, and go to state 48

    LCURL  reduce using rule 15 ($@1)

    $@1  go to state 49


state 36

   23 parameter_list: parameter_list COMMA . type_specifier ID
   25               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 50


state 37

   27 parameter_list: type_specifier ID .

    $default  reduce using rule 27 (parameter_list)


state 38

   45 declaration_list: ID LTHIRD constant RTHIRD .

    $default  reduce using rule 45 (declaration_list)


state 39

   41 declaration_list: declaration_list error COMMA ID .
   43                 | declaration_list error COMMA ID . LTHIRD constant RTHIRD

    LTHIRD  shift, and go to state 51

    $default  reduce using rule 41 (declaration_list)


state 40

   42 declaration_list: declaration_list COMMA ID LTHIRD . constant RTHIRD

    CONST_INT    shift, and go to state 24
    CONST_FLOAT  shift, and go to state 25

    constant  go to state 52


state 41

   13 func_declaration: type_specifier ID LPAREN error RPAREN SEMICOLON .
   14                 | type_specifier ID LPAREN error RPAREN SEMICOLON . error

    error  shift, and go to state 53

    $end         reduce using rule 13 (func_declaration)
    error        [reduce using rule 13 (func_declaration)]
    IF           reduce using rule 13 (func_declaration)
    ELSE         reduce using rule 13 (func_declaration)
    FOR          reduce using rule 13 (func_declaration)
    WHILE        reduce using rule 13 (func_declaration)
    INT          reduce using rule 13 (func_declaration)
    FLOAT        reduce using rule 13 (func_declaration)
    VOID         reduce using rule 13 (func_declaration)
    RETURN       reduce using rule 13 (func_declaration)
    NOT          reduce using rule 13 (func_declaration)
    PRINTLN      reduce using rule 13 (func_declaration)
    LPAREN       reduce using rule 13 (func_declaration)
    LCURL        reduce using rule 13 (func_declaration)
    RCURL        reduce using rule 13 (func_declaration)
    SEMICOLON    reduce using rule 13 (func_declaration)
    ID           reduce using rule 13 (func_declaration)
    CONST_INT    reduce using rule 13 (func_declaration)
    CONST_FLOAT  reduce using rule 13 (func_declaration)
    ADDOP        reduce using rule 13 (func_declaration)


state 42

   22 func_definition: type_specifier ID LPAREN error RPAREN $@4 . compound_statement

    LCURL  shift, and go to state 43

    compound_statement  go to state 54


state 43

   29 compound_statement: LCURL . create_scope statements RCURL
   30                   | LCURL . create_scope statements error RCURL
   31                   | LCURL . create_scope error statements RCURL
   32                   | LCURL . create_scope RCURL
   33                   | LCURL . create_scope error RCURL

    $default  reduce using rule 34 (create_scope)

    create_scope  go to state 55


state 44

   20 func_definition: type_specifier ID LPAREN RPAREN $@3 compound_statement .

    $default  reduce using rule 20 (func_definition)


state 45

    9 func_declaration: type_specifier ID LPAREN parameter_list error RPAREN . SEMICOLON
   10                 | type_specifier ID LPAREN parameter_list error RPAREN . error
   18 func_definition: type_specifier ID LPAREN parameter_list error RPAREN . $@2 compound_statement

    error      shift, and go to state 56
    SEMICOLON  shift, and go to state 57

    LCURL  reduce using rule 17 ($@2)

    $@2  go to state 58


state 46

   24 parameter_list: parameter_list error COMMA . type_specifier ID
   26               | parameter_list error COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 59


state 47

    8 func_declaration: type_specifier ID LPAREN parameter_list RPAREN error .

    $default  reduce using rule 8 (func_declaration)


state 48

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 7 (func_declaration)


state 49

   16 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 . compound_statement

    LCURL  shift, and go to state 43

    compound_statement  go to state 60


state 50

   23 parameter_list: parameter_list COMMA type_specifier . ID
   25               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 61

    $default  reduce using rule 25 (parameter_list)


state 51

   43 declaration_list: declaration_list error COMMA ID LTHIRD . constant RTHIRD

    CONST_INT    shift, and go to state 24
    CONST_FLOAT  shift, and go to state 25

    constant  go to state 62


state 52

   42 declaration_list: declaration_list COMMA ID LTHIRD constant . RTHIRD

    RTHIRD  shift, and go to state 63


state 53

   14 func_declaration: type_specifier ID LPAREN error RPAREN SEMICOLON error .

    $default  reduce using rule 14 (func_declaration)


state 54

   22 func_definition: type_specifier ID LPAREN error RPAREN $@4 compound_statement .

    $default  reduce using rule 22 (func_definition)


state 55

   29 compound_statement: LCURL create_scope . statements RCURL
   30                   | LCURL create_scope . statements error RCURL
   31                   | LCURL create_scope . error statements RCURL
   32                   | LCURL create_scope . RCURL
   33                   | LCURL create_scope . error RCURL

    error        shift, and go to state 64
    IF           shift, and go to state 65
    FOR          shift, and go to state 66
    WHILE        shift, and go to state 67
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 68
    NOT          shift, and go to state 69
    PRINTLN      shift, and go to state 70
    LPAREN       shift, and go to state 71
    LCURL        shift, and go to state 43
    RCURL        shift, and go to state 72
    SEMICOLON    shift, and go to state 73
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    func_declaration      go to state 78
    func_definition       go to state 79
    compound_statement    go to state 80
    var_declaration       go to state 81
    type_specifier        go to state 10
    statements            go to state 82
    statement             go to state 83
    expression_statement  go to state 84
    variable              go to state 85
    expression            go to state 86
    logic_expression      go to state 87
    rel_expression        go to state 88
    simple_expression     go to state 89
    term                  go to state 90
    unary_expression      go to state 91
    factor                go to state 92


state 56

   10 func_declaration: type_specifier ID LPAREN parameter_list error RPAREN error .

    $default  reduce using rule 10 (func_declaration)


state 57

    9 func_declaration: type_specifier ID LPAREN parameter_list error RPAREN SEMICOLON .

    $default  reduce using rule 9 (func_declaration)


state 58

   18 func_definition: type_specifier ID LPAREN parameter_list error RPAREN $@2 . compound_statement

    LCURL  shift, and go to state 43

    compound_statement  go to state 93


state 59

   24 parameter_list: parameter_list error COMMA type_specifier . ID
   26               | parameter_list error COMMA type_specifier .

    ID  shift, and go to state 94

    $default  reduce using rule 26 (parameter_list)


state 60

   16 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement .

    $default  reduce using rule 16 (func_definition)


state 61

   23 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 23 (parameter_list)


state 62

   43 declaration_list: declaration_list error COMMA ID LTHIRD constant . RTHIRD

    RTHIRD  shift, and go to state 95


state 63

   42 declaration_list: declaration_list COMMA ID LTHIRD constant RTHIRD .

    $default  reduce using rule 42 (declaration_list)


state 64

   31 compound_statement: LCURL create_scope error . statements RCURL
   33                   | LCURL create_scope error . RCURL

    IF           shift, and go to state 65
    FOR          shift, and go to state 66
    WHILE        shift, and go to state 67
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 68
    NOT          shift, and go to state 69
    PRINTLN      shift, and go to state 70
    LPAREN       shift, and go to state 71
    LCURL        shift, and go to state 43
    RCURL        shift, and go to state 96
    SEMICOLON    shift, and go to state 73
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    func_declaration      go to state 78
    func_definition       go to state 79
    compound_statement    go to state 80
    var_declaration       go to state 81
    type_specifier        go to state 10
    statements            go to state 97
    statement             go to state 83
    expression_statement  go to state 84
    variable              go to state 85
    expression            go to state 86
    logic_expression      go to state 87
    rel_expression        go to state 88
    simple_expression     go to state 89
    term                  go to state 90
    unary_expression      go to state 91
    factor                go to state 92


state 65

   58 statement: IF . LPAREN expression RPAREN create_if_block statement
   60          | IF . LPAREN expression RPAREN create_if_block statement ELSE $@8 statement

    LPAREN  shift, and go to state 98


state 66

   57 statement: FOR . LPAREN expression_statement $@5 expression_statement $@6 expression $@7 RPAREN statement

    LPAREN  shift, and go to state 99


state 67

   63 statement: WHILE . $@9 LPAREN expression $@10 RPAREN statement

    $default  reduce using rule 61 ($@9)

    $@9  go to state 100


state 68

   65 statement: RETURN . expression SEMICOLON
   66          | RETURN . SEMICOLON

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 71
    SEMICOLON    shift, and go to state 101
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    variable           go to state 85
    expression         go to state 102
    logic_expression   go to state 87
    rel_expression     go to state 88
    simple_expression  go to state 89
    term               go to state 90
    unary_expression   go to state 91
    factor             go to state 92


state 69

   83 unary_expression: NOT . unary_expression

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 71
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    variable          go to state 103
    unary_expression  go to state 104
    factor            go to state 92


state 70

   64 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 105


state 71

   87 factor: LPAREN . expression RPAREN

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 71
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    variable           go to state 85
    expression         go to state 106
    logic_expression   go to state 87
    rel_expression     go to state 88
    simple_expression  go to state 89
    term               go to state 90
    unary_expression   go to state 91
    factor             go to state 92


state 72

   32 compound_statement: LCURL create_scope RCURL .

    $default  reduce using rule 32 (compound_statement)


state 73

   68 expression_statement: SEMICOLON .

    $default  reduce using rule 68 (expression_statement)


state 74

   70 variable: ID .
   71         | ID . LTHIRD expression RTHIRD
   86 factor: ID . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 107
    LTHIRD  shift, and go to state 108

    $default  reduce using rule 70 (variable)


state 75

   88 factor: CONST_INT .

    $default  reduce using rule 88 (factor)


state 76

   89 factor: CONST_FLOAT .

    $default  reduce using rule 89 (factor)


state 77

   82 unary_expression: ADDOP . unary_expression

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 71
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    variable          go to state 103
    unary_expression  go to state 109
    factor            go to state 92


state 78

   51 statement: func_declaration .

    $default  reduce using rule 51 (statement)


state 79

   50 statement: func_definition .

    $default  reduce using rule 50 (statement)


state 80

   53 statement: compound_statement .

    $default  reduce using rule 53 (statement)


state 81

   49 statement: var_declaration .

    $default  reduce using rule 49 (statement)


state 82

   29 compound_statement: LCURL create_scope statements . RCURL
   30                   | LCURL create_scope statements . error RCURL
   47 statements: statements . statement
   48           | statements . error statement

    error        shift, and go to state 110
    IF           shift, and go to state 65
    FOR          shift, and go to state 66
    WHILE        shift, and go to state 67
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 68
    NOT          shift, and go to state 69
    PRINTLN      shift, and go to state 70
    LPAREN       shift, and go to state 71
    LCURL        shift, and go to state 43
    RCURL        shift, and go to state 111
    SEMICOLON    shift, and go to state 73
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    func_declaration      go to state 78
    func_definition       go to state 79
    compound_statement    go to state 80
    var_declaration       go to state 81
    type_specifier        go to state 10
    statement             go to state 112
    expression_statement  go to state 84
    variable              go to state 85
    expression            go to state 86
    logic_expression      go to state 87
    rel_expression        go to state 88
    simple_expression     go to state 89
    term                  go to state 90
    unary_expression      go to state 91
    factor                go to state 92


state 83

   46 statements: statement .

    $default  reduce using rule 46 (statements)


state 84

   52 statement: expression_statement .

    $default  reduce using rule 52 (statement)


state 85

   73 expression: variable . ASSIGNOP logic_expression
   85 factor: variable .
   90       | variable . INCOP
   91       | variable . DECOP

    INCOP     shift, and go to state 113
    DECOP     shift, and go to state 114
    ASSIGNOP  shift, and go to state 115

    $default  reduce using rule 85 (factor)


state 86

   69 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 116


state 87

   72 expression: logic_expression .

    $default  reduce using rule 72 (expression)


state 88

   74 logic_expression: rel_expression .
   75                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 117

    $default  reduce using rule 74 (logic_expression)


state 89

   76 rel_expression: simple_expression .
   77               | simple_expression . RELOP simple_expression
   79 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 118
    RELOP  shift, and go to state 119

    $default  reduce using rule 76 (rel_expression)


state 90

   78 simple_expression: term .
   81 term: term . MULOP unary_expression

    MULOP  shift, and go to state 120

    $default  reduce using rule 78 (simple_expression)


state 91

   80 term: unary_expression .

    $default  reduce using rule 80 (term)


state 92

   84 unary_expression: factor .

    $default  reduce using rule 84 (unary_expression)


state 93

   18 func_definition: type_specifier ID LPAREN parameter_list error RPAREN $@2 compound_statement .

    $default  reduce using rule 18 (func_definition)


state 94

   24 parameter_list: parameter_list error COMMA type_specifier ID .

    $default  reduce using rule 24 (parameter_list)


state 95

   43 declaration_list: declaration_list error COMMA ID LTHIRD constant RTHIRD .

    $default  reduce using rule 43 (declaration_list)


state 96

   33 compound_statement: LCURL create_scope error RCURL .

    $default  reduce using rule 33 (compound_statement)


state 97

   31 compound_statement: LCURL create_scope error statements . RCURL
   47 statements: statements . statement
   48           | statements . error statement

    error        shift, and go to state 121
    IF           shift, and go to state 65
    FOR          shift, and go to state 66
    WHILE        shift, and go to state 67
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 68
    NOT          shift, and go to state 69
    PRINTLN      shift, and go to state 70
    LPAREN       shift, and go to state 71
    LCURL        shift, and go to state 43
    RCURL        shift, and go to state 122
    SEMICOLON    shift, and go to state 73
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    func_declaration      go to state 78
    func_definition       go to state 79
    compound_statement    go to state 80
    var_declaration       go to state 81
    type_specifier        go to state 10
    statement             go to state 112
    expression_statement  go to state 84
    variable              go to state 85
    expression            go to state 86
    logic_expression      go to state 87
    rel_expression        go to state 88
    simple_expression     go to state 89
    term                  go to state 90
    unary_expression      go to state 91
    factor                go to state 92


state 98

   58 statement: IF LPAREN . expression RPAREN create_if_block statement
   60          | IF LPAREN . expression RPAREN create_if_block statement ELSE $@8 statement

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 71
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    variable           go to state 85
    expression         go to state 123
    logic_expression   go to state 87
    rel_expression     go to state 88
    simple_expression  go to state 89
    term               go to state 90
    unary_expression   go to state 91
    factor             go to state 92


state 99

   57 statement: FOR LPAREN . expression_statement $@5 expression_statement $@6 expression $@7 RPAREN statement

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 71
    SEMICOLON    shift, and go to state 73
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    expression_statement  go to state 124
    variable              go to state 85
    expression            go to state 86
    logic_expression      go to state 87
    rel_expression        go to state 88
    simple_expression     go to state 89
    term                  go to state 90
    unary_expression      go to state 91
    factor                go to state 92


state 100

   63 statement: WHILE $@9 . LPAREN expression $@10 RPAREN statement

    LPAREN  shift, and go to state 125


state 101

   66 statement: RETURN SEMICOLON .

    $default  reduce using rule 66 (statement)


state 102

   65 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 126


state 103

   85 factor: variable .
   90       | variable . INCOP
   91       | variable . DECOP

    INCOP  shift, and go to state 113
    DECOP  shift, and go to state 114

    $default  reduce using rule 85 (factor)


state 104

   83 unary_expression: NOT unary_expression .

    $default  reduce using rule 83 (unary_expression)


state 105

   64 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 127


state 106

   87 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 128


state 107

   86 factor: ID LPAREN . argument_list RPAREN

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 71
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    $default  reduce using rule 93 (argument_list)

    variable           go to state 103
    logic_expression   go to state 129
    rel_expression     go to state 88
    simple_expression  go to state 89
    term               go to state 90
    unary_expression   go to state 91
    factor             go to state 92
    argument_list      go to state 130
    arguments          go to state 131


state 108

   71 variable: ID LTHIRD . expression RTHIRD

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 71
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    variable           go to state 85
    expression         go to state 132
    logic_expression   go to state 87
    rel_expression     go to state 88
    simple_expression  go to state 89
    term               go to state 90
    unary_expression   go to state 91
    factor             go to state 92


state 109

   82 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 82 (unary_expression)


state 110

   30 compound_statement: LCURL create_scope statements error . RCURL
   48 statements: statements error . statement

    IF           shift, and go to state 65
    FOR          shift, and go to state 66
    WHILE        shift, and go to state 67
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 68
    NOT          shift, and go to state 69
    PRINTLN      shift, and go to state 70
    LPAREN       shift, and go to state 71
    LCURL        shift, and go to state 43
    RCURL        shift, and go to state 133
    SEMICOLON    shift, and go to state 73
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    func_declaration      go to state 78
    func_definition       go to state 79
    compound_statement    go to state 80
    var_declaration       go to state 81
    type_specifier        go to state 10
    statement             go to state 134
    expression_statement  go to state 84
    variable              go to state 85
    expression            go to state 86
    logic_expression      go to state 87
    rel_expression        go to state 88
    simple_expression     go to state 89
    term                  go to state 90
    unary_expression      go to state 91
    factor                go to state 92


state 111

   29 compound_statement: LCURL create_scope statements RCURL .

    $default  reduce using rule 29 (compound_statement)


state 112

   47 statements: statements statement .

    $default  reduce using rule 47 (statements)


state 113

   90 factor: variable INCOP .

    $default  reduce using rule 90 (factor)


state 114

   91 factor: variable DECOP .

    $default  reduce using rule 91 (factor)


state 115

   73 expression: variable ASSIGNOP . logic_expression

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 71
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    variable           go to state 103
    logic_expression   go to state 135
    rel_expression     go to state 88
    simple_expression  go to state 89
    term               go to state 90
    unary_expression   go to state 91
    factor             go to state 92


state 116

   69 expression_statement: expression SEMICOLON .

    $default  reduce using rule 69 (expression_statement)


state 117

   75 logic_expression: rel_expression LOGICOP . rel_expression

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 71
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    variable           go to state 103
    rel_expression     go to state 136
    simple_expression  go to state 89
    term               go to state 90
    unary_expression   go to state 91
    factor             go to state 92


state 118

   79 simple_expression: simple_expression ADDOP . term

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 71
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    variable          go to state 103
    term              go to state 137
    unary_expression  go to state 91
    factor            go to state 92


state 119

   77 rel_expression: simple_expression RELOP . simple_expression

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 71
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    variable           go to state 103
    simple_expression  go to state 138
    term               go to state 90
    unary_expression   go to state 91
    factor             go to state 92


state 120

   81 term: term MULOP . unary_expression

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 71
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    variable          go to state 103
    unary_expression  go to state 139
    factor            go to state 92


state 121

   48 statements: statements error . statement

    IF           shift, and go to state 65
    FOR          shift, and go to state 66
    WHILE        shift, and go to state 67
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 68
    NOT          shift, and go to state 69
    PRINTLN      shift, and go to state 70
    LPAREN       shift, and go to state 71
    LCURL        shift, and go to state 43
    SEMICOLON    shift, and go to state 73
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    func_declaration      go to state 78
    func_definition       go to state 79
    compound_statement    go to state 80
    var_declaration       go to state 81
    type_specifier        go to state 10
    statement             go to state 134
    expression_statement  go to state 84
    variable              go to state 85
    expression            go to state 86
    logic_expression      go to state 87
    rel_expression        go to state 88
    simple_expression     go to state 89
    term                  go to state 90
    unary_expression      go to state 91
    factor                go to state 92


state 122

   31 compound_statement: LCURL create_scope error statements RCURL .

    $default  reduce using rule 31 (compound_statement)


state 123

   58 statement: IF LPAREN expression . RPAREN create_if_block statement
   60          | IF LPAREN expression . RPAREN create_if_block statement ELSE $@8 statement

    RPAREN  shift, and go to state 140


state 124

   57 statement: FOR LPAREN expression_statement . $@5 expression_statement $@6 expression $@7 RPAREN statement

    $default  reduce using rule 54 ($@5)

    $@5  go to state 141


state 125

   63 statement: WHILE $@9 LPAREN . expression $@10 RPAREN statement

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 71
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    variable           go to state 85
    expression         go to state 142
    logic_expression   go to state 87
    rel_expression     go to state 88
    simple_expression  go to state 89
    term               go to state 90
    unary_expression   go to state 91
    factor             go to state 92


state 126

   65 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 65 (statement)


state 127

   64 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 143


state 128

   87 factor: LPAREN expression RPAREN .

    $default  reduce using rule 87 (factor)


state 129

   95 arguments: logic_expression .

    $default  reduce using rule 95 (arguments)


state 130

   86 factor: ID LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 144


state 131

   92 argument_list: arguments .
   94 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 145

    $default  reduce using rule 92 (argument_list)


state 132

   71 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 146


state 133

   30 compound_statement: LCURL create_scope statements error RCURL .

    $default  reduce using rule 30 (compound_statement)


state 134

   48 statements: statements error statement .

    $default  reduce using rule 48 (statements)


state 135

   73 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 73 (expression)


state 136

   75 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 75 (logic_expression)


state 137

   79 simple_expression: simple_expression ADDOP term .
   81 term: term . MULOP unary_expression

    MULOP  shift, and go to state 120

    $default  reduce using rule 79 (simple_expression)


state 138

   77 rel_expression: simple_expression RELOP simple_expression .
   79 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 118

    $default  reduce using rule 77 (rel_expression)


state 139

   81 term: term MULOP unary_expression .

    $default  reduce using rule 81 (term)


state 140

   58 statement: IF LPAREN expression RPAREN . create_if_block statement
   60          | IF LPAREN expression RPAREN . create_if_block statement ELSE $@8 statement

    $default  reduce using rule 67 (create_if_block)

    create_if_block  go to state 147


state 141

   57 statement: FOR LPAREN expression_statement $@5 . expression_statement $@6 expression $@7 RPAREN statement

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 71
    SEMICOLON    shift, and go to state 73
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    expression_statement  go to state 148
    variable              go to state 85
    expression            go to state 86
    logic_expression      go to state 87
    rel_expression        go to state 88
    simple_expression     go to state 89
    term                  go to state 90
    unary_expression      go to state 91
    factor                go to state 92


state 142

   63 statement: WHILE $@9 LPAREN expression . $@10 RPAREN statement

    $default  reduce using rule 62 ($@10)

    $@10  go to state 149


state 143

   64 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 150


state 144

   86 factor: ID LPAREN argument_list RPAREN .

    $default  reduce using rule 86 (factor)


state 145

   94 arguments: arguments COMMA . logic_expression

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 71
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    variable           go to state 103
    logic_expression   go to state 151
    rel_expression     go to state 88
    simple_expression  go to state 89
    term               go to state 90
    unary_expression   go to state 91
    factor             go to state 92


state 146

   71 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 71 (variable)


state 147

   58 statement: IF LPAREN expression RPAREN create_if_block . statement
   60          | IF LPAREN expression RPAREN create_if_block . statement ELSE $@8 statement

    IF           shift, and go to state 65
    FOR          shift, and go to state 66
    WHILE        shift, and go to state 67
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 68
    NOT          shift, and go to state 69
    PRINTLN      shift, and go to state 70
    LPAREN       shift, and go to state 71
    LCURL        shift, and go to state 43
    SEMICOLON    shift, and go to state 73
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    func_declaration      go to state 78
    func_definition       go to state 79
    compound_statement    go to state 80
    var_declaration       go to state 81
    type_specifier        go to state 10
    statement             go to state 152
    expression_statement  go to state 84
    variable              go to state 85
    expression            go to state 86
    logic_expression      go to state 87
    rel_expression        go to state 88
    simple_expression     go to state 89
    term                  go to state 90
    unary_expression      go to state 91
    factor                go to state 92


state 148

   57 statement: FOR LPAREN expression_statement $@5 expression_statement . $@6 expression $@7 RPAREN statement

    $default  reduce using rule 55 ($@6)

    $@6  go to state 153


state 149

   63 statement: WHILE $@9 LPAREN expression $@10 . RPAREN statement

    RPAREN  shift, and go to state 154


state 150

   64 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 64 (statement)


state 151

   94 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 94 (arguments)


state 152

   58 statement: IF LPAREN expression RPAREN create_if_block statement .
   60          | IF LPAREN expression RPAREN create_if_block statement . ELSE $@8 statement

    ELSE  shift, and go to state 155

    $default  reduce using rule 58 (statement)


state 153

   57 statement: FOR LPAREN expression_statement $@5 expression_statement $@6 . expression $@7 RPAREN statement

    NOT          shift, and go to state 69
    LPAREN       shift, and go to state 71
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    variable           go to state 85
    expression         go to state 156
    logic_expression   go to state 87
    rel_expression     go to state 88
    simple_expression  go to state 89
    term               go to state 90
    unary_expression   go to state 91
    factor             go to state 92


state 154

   63 statement: WHILE $@9 LPAREN expression $@10 RPAREN . statement

    IF           shift, and go to state 65
    FOR          shift, and go to state 66
    WHILE        shift, and go to state 67
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 68
    NOT          shift, and go to state 69
    PRINTLN      shift, and go to state 70
    LPAREN       shift, and go to state 71
    LCURL        shift, and go to state 43
    SEMICOLON    shift, and go to state 73
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    func_declaration      go to state 78
    func_definition       go to state 79
    compound_statement    go to state 80
    var_declaration       go to state 81
    type_specifier        go to state 10
    statement             go to state 157
    expression_statement  go to state 84
    variable              go to state 85
    expression            go to state 86
    logic_expression      go to state 87
    rel_expression        go to state 88
    simple_expression     go to state 89
    term                  go to state 90
    unary_expression      go to state 91
    factor                go to state 92


state 155

   60 statement: IF LPAREN expression RPAREN create_if_block statement ELSE . $@8 statement

    $default  reduce using rule 59 ($@8)

    $@8  go to state 158


state 156

   57 statement: FOR LPAREN expression_statement $@5 expression_statement $@6 expression . $@7 RPAREN statement

    $default  reduce using rule 56 ($@7)

    $@7  go to state 159


state 157

   63 statement: WHILE $@9 LPAREN expression $@10 RPAREN statement .

    $default  reduce using rule 63 (statement)


state 158

   60 statement: IF LPAREN expression RPAREN create_if_block statement ELSE $@8 . statement

    IF           shift, and go to state 65
    FOR          shift, and go to state 66
    WHILE        shift, and go to state 67
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 68
    NOT          shift, and go to state 69
    PRINTLN      shift, and go to state 70
    LPAREN       shift, and go to state 71
    LCURL        shift, and go to state 43
    SEMICOLON    shift, and go to state 73
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    func_declaration      go to state 78
    func_definition       go to state 79
    compound_statement    go to state 80
    var_declaration       go to state 81
    type_specifier        go to state 10
    statement             go to state 160
    expression_statement  go to state 84
    variable              go to state 85
    expression            go to state 86
    logic_expression      go to state 87
    rel_expression        go to state 88
    simple_expression     go to state 89
    term                  go to state 90
    unary_expression      go to state 91
    factor                go to state 92


state 159

   57 statement: FOR LPAREN expression_statement $@5 expression_statement $@6 expression $@7 . RPAREN statement

    RPAREN  shift, and go to state 161


state 160

   60 statement: IF LPAREN expression RPAREN create_if_block statement ELSE $@8 statement .

    $default  reduce using rule 60 (statement)


state 161

   57 statement: FOR LPAREN expression_statement $@5 expression_statement $@6 expression $@7 RPAREN . statement

    IF           shift, and go to state 65
    FOR          shift, and go to state 66
    WHILE        shift, and go to state 67
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 68
    NOT          shift, and go to state 69
    PRINTLN      shift, and go to state 70
    LPAREN       shift, and go to state 71
    LCURL        shift, and go to state 43
    SEMICOLON    shift, and go to state 73
    ID           shift, and go to state 74
    CONST_INT    shift, and go to state 75
    CONST_FLOAT  shift, and go to state 76
    ADDOP        shift, and go to state 77

    func_declaration      go to state 78
    func_definition       go to state 79
    compound_statement    go to state 80
    var_declaration       go to state 81
    type_specifier        go to state 10
    statement             go to state 162
    expression_statement  go to state 84
    variable              go to state 85
    expression            go to state 86
    logic_expression      go to state 87
    rel_expression        go to state 88
    simple_expression     go to state 89
    term                  go to state 90
    unary_expression      go to state 91
    factor                go to state 92


state 162

   57 statement: FOR LPAREN expression_statement $@5 expression_statement $@6 expression $@7 RPAREN statement .

    $default  reduce using rule 57 (statement)
